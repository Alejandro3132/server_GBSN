{'exp_label': 'short'}
Sparse mode: False
device cuda:2
tensor type torch.FloatTensor
Epochs: 100
Batch size: 256
Starting with exp_op:
('model_class', <class 'siamese_graph.GCNSiamese2'>)
('model_args', {'h_ch': 64, 'out_ch': 64, 'drop_p': None, 'conv_layers_num': 6, 'conv_type': <class 'torch_geometric.nn.conv.le_conv.LEConv'>, 'conv_long_type': None, 'conv_long_args': [3], 'att_type': None, 'att_heads': 1, 'pool_type': <class 'siamese_graph.GlobalAttentionSelect'>, 'pool_att_ch': 32, 'pool_att_layers': 4, 'pool_final_relu': True, 'pool_ref': 'last', 'final_out_layers_num': 4, 'final_out_ch': 64, 'final_out_join': 'abs'})


loss_fn: BCEWithLogitsLoss()
loss_fn_aux_dict:
('soft_f1_loss', <function soft_f1_loss at 0x7f0f4f9eb040>)
('double_soft_f1_loss', <function double_soft_f1_loss at 0x7f0f4f9eb0d0>)
('bound_f1_loss', <function bound_f1_loss at 0x7f0f4f9eb1f0>)



===== Model:

 GCNSiamese2(
  (conv1): LEConv(38, 64)
  (conv2): LEConv(64, 64)
  (conv_out): LEConv(64, 64)
  (norm1): BatchNorm(64)
  (norm2): BatchNorm(64)
  (norm_out): BatchNorm(64)
  (conv3): LEConv(64, 64)
  (conv4): LEConv(64, 64)
  (conv5): LEConv(64, 64)
  (norm3): BatchNorm(64)
  (norm4): BatchNorm(64)
  (norm5): BatchNorm(64)
  (pool): GlobalAttentionSelect(gate_nn=Sequential(
    (0): Linear(in_features=64, out_features=32, bias=True)
    (1): ReLU()
    (2): Linear(in_features=32, out_features=32, bias=True)
    (3): ReLU()
    (4): Linear(in_features=32, out_features=32, bias=True)
    (5): ReLU()
    (6): Linear(in_features=32, out_features=1, bias=True)
    (7): ReLU()
  ), nn=None)
  (final_out): Sequential(
    (0): Linear(in_features=64, out_features=64, bias=True)
    (1): ReLU()
    (2): Linear(in_features=64, out_features=64, bias=True)
    (3): ReLU()
    (4): Linear(in_features=64, out_features=64, bias=True)
    (5): ReLU()
    (6): Linear(in_features=64, out_features=1, bias=True)
  )
)

===== Optimizer:
Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.001
    weight_decay: 0
)

 ===== Train model. Execute time was:
Minutes: 86.42
Seconds: 5185.24

 ===== Test last_model. Execute time was:
Minutes: 0.04
Seconds: 2.62

 ===== Test best_model. Execute time was:
Minutes: 0.04
Seconds: 2.62

 ===== Test best_model_sa. Execute time was:
Minutes: 0.05
Seconds: 2.91

Saving raw metrics in: ../output_siamese/experiment_2/20-small-train_06151729/short_1/cooc-06151729_short_1_metrics

 ===== best_model:
Epoch: 55
                          val      test
-------------------  --------  --------
main loss            0.334896  0.367857
average              0.881533  0.866507
roc_auc              0.934415  0.921677
f1_score             0.856264  0.839501
c_at_1               0.857768  0.840844
f_05                 0.862229  0.845043
brier                0.896991  0.88547
soft_f1_loss         0.528274  0.535578
double_soft_f1_loss  0.532718  0.539651
bound_f1_loss        0.547808  0.55315

 ===== best_model_sa:
Epoch: 51
                          val      test
-------------------  --------  --------
main loss            0.33978   0.370671
average              0.881641  0.865702
roc_auc              0.932361  0.920592
f1_score             0.852478  0.831117
c_at_1               0.857387  0.838182
f_05                 0.870981  0.854833
brier                0.894999  0.883785
soft_f1_loss         0.53666   0.546277
double_soft_f1_loss  0.53509   0.542303
bound_f1_loss        0.55643   0.563822

 ===== last_model:
Epoch: 99
                          val      test
-------------------  --------  --------
main loss            0.390192  0.413896
average              0.869621  0.863027
roc_auc              0.929801  0.921294
f1_score             0.848078  0.843605
c_at_1               0.845218  0.839323
f_05                 0.839243  0.831509
brier                0.885765  0.879402
soft_f1_loss         0.518544  0.521163
double_soft_f1_loss  0.53028   0.534977
bound_f1_loss        0.537202  0.538225

 ===== Early stop model:
Epoch: 55
Early stop model deactivated

===== Max average in val: 0.881641 epoch 51

===== Optimize threshold for best_model:
Test: Original
0.86650728060918
Val: Best th posible
('0.50', '0.20')
0.8929105820281119
Test: Optimized
0.876967542106714
Test: Best th posible
('0.45', '0.20')
0.8786560685651317

===== Optimize threshold for best_model_sa:
Test: Original
0.8657018514772215
Val: Best th posible
('0.40', '0.20')
0.8915270852674715
Test: Optimized
0.8761928791747602
Test: Best th posible
('0.50', '0.20')
0.8773836548309525

==========
Max gpu_usage: 5083

 ===== Total time for cooc-06151729_short_1. Execute time was:
Minutes: 88.05
Seconds: 5282.75
