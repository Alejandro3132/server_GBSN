ds_op:  {'exp_label': 'short'}
experiment repetition:  0  of  1
data_type_list:  ['short']

Sparse mode: False
device cuda:7
tensor type torch.FloatTensor
Epochs: 150
Batch size: 256
Starting with exp_op:
('model_args', {'raw_components_list': [{'class': <class 'siamese_graph.GBFeatures'>, 'args': {'conv_layers_num': 12, 'conv_type': <class 'torch_geometric.nn.conv.tag_conv.TAGConv'>, 'h_ch': 64, 'out_ch': 64, 'pool_type': <class 'siamese_graph.GlobalAttentionSelect'>, 'pool_att_ch': 32, 'pool_att_layers': 4, 'pool_ref': 'last'}}], 'final_out_join': 'abs', 'final_out_layers_num': 4, 'final_out_ch': 64})


loss_fn: BCEWithLogitsLoss()
loss_fn_aux_dict:
('soft_f1_loss', <function soft_f1_loss at 0x7fc357a11ca0>)
('double_soft_f1_loss', <function double_soft_f1_loss at 0x7fc357a11d30>)
('bound_f1_loss', <function bound_f1_loss at 0x7fc357a11e50>)



===== Model:

 SiameseNetwork(
  (components): ModuleList(
    (0): GBFeatures(
      (conv_layers): ModuleList(
        (0): GCLayer(
          (conv): TAGConv(38, 64, K=3)
          (norm): BatchNorm(64)
        )
        (1): GCLayer(
          (conv): TAGConv(64, 64, K=3)
          (norm): BatchNorm(64)
        )
        (2): GCLayer(
          (conv): TAGConv(64, 64, K=3)
          (norm): BatchNorm(64)
        )
        (3): GCLayer(
          (conv): TAGConv(64, 64, K=3)
          (norm): BatchNorm(64)
        )
        (4): GCLayer(
          (conv): TAGConv(64, 64, K=3)
          (norm): BatchNorm(64)
        )
        (5): GCLayer(
          (conv): TAGConv(64, 64, K=3)
          (norm): BatchNorm(64)
        )
        (6): GCLayer(
          (conv): TAGConv(64, 64, K=3)
          (norm): BatchNorm(64)
        )
        (7): GCLayer(
          (conv): TAGConv(64, 64, K=3)
          (norm): BatchNorm(64)
        )
        (8): GCLayer(
          (conv): TAGConv(64, 64, K=3)
          (norm): BatchNorm(64)
        )
        (9): GCLayer(
          (conv): TAGConv(64, 64, K=3)
          (norm): BatchNorm(64)
        )
        (10): GCLayer(
          (conv): TAGConv(64, 64, K=3)
          (norm): BatchNorm(64)
        )
        (11): GCLayer(
          (conv): TAGConv(64, 64, K=3)
          (norm): BatchNorm(64)
        )
      )
      (pool): GlobalAttentionSelect(gate_nn=Sequential(
        (0): Linear(in_features=64, out_features=32, bias=True)
        (1): ReLU()
        (2): Linear(in_features=32, out_features=32, bias=True)
        (3): ReLU()
        (4): Linear(in_features=32, out_features=32, bias=True)
        (5): ReLU()
        (6): Linear(in_features=32, out_features=1, bias=True)
        (7): ReLU()
      ), nn=None)
    )
  )
  (final_out): Sequential(
    (0): Linear(in_features=64, out_features=64, bias=True)
    (1): ReLU()
    (2): Linear(in_features=64, out_features=64, bias=True)
    (3): ReLU()
    (4): Linear(in_features=64, out_features=64, bias=True)
    (5): ReLU()
    (6): Linear(in_features=64, out_features=1, bias=True)
  )
)

===== Optimizer:
Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.001
    weight_decay: 0
)

 ===== Train model. Execute time was:
Minutes: 2.94
Seconds: 176.56

 ===== Test last_model. Execute time was:
Minutes: 0.01
Seconds: 0.38

 ===== Test best_model. Execute time was:
Minutes: 0.01
Seconds: 0.39

 ===== Test best_model_sa. Execute time was:
Minutes: 0.01
Seconds: 0.38

Saving raw metrics in: ../test/test_output_siamese/test_command_line/22-train_05101021/short_0-0/GBSN05101021_short_0-0_metrics

 ===== best_model:
Epoch: 20
                          val      test
-------------------  --------  --------
main loss            0.517471  0.488702
average              0.775236  0.799286
roc_auc              0.157895  0.263158
f1_score             0.974359  0.974359
c_at_1               0.95      0.95
f_05                 0.959596  0.959596
brier                0.834328  0.849318
soft_f1_loss         0.235799  0.238009
double_soft_f1_loss  0.596937  0.581558
bound_f1_loss        0.258887  0.26123

 ===== best_model_sa:
Epoch: 10
                          val      test
-------------------  --------  --------
main loss            0.6779    0.677459
average              0.907263  0.92836
roc_auc              0.894737  1
f1_score             0.974359  0.974359
c_at_1               0.95      0.95
f_05                 0.959596  0.959596
brier                0.757623  0.757843
soft_f1_loss         0.337544  0.33734
double_soft_f1_loss  0.62334   0.623214
bound_f1_loss        0.359502  0.359301

 ===== last_model:
Epoch: 149
                           val      test
-------------------  ---------  --------
main loss            3.54814    0.986885
average              0.687723   0.719257
roc_auc              0.0789474  0.263158
f1_score             0.857143   0.857143
c_at_1               0.75       0.75
f_05                 0.903614   0.903614
brier                0.848909   0.822371
soft_f1_loss         0.144299   0.159476
double_soft_f1_loss  0.57215    0.579737
bound_f1_loss        0.168098   0.183153

 ===== Early stop model:
Epoch: 20
Early stop model deactivated

===== Max average in val: 0.907263 epoch 10

===== Optimize threshold for best_model:
Test: Original
0.7992860663008304
Val: Best th posible
('0.05', '0.00')
0.7927872973296171
Test: Optimized
0.8153728869757021
Test: Best th posible
('0.05', '0.00')
0.8153728869757021

===== Optimize threshold for best_model_sa:
Test: Original
0.9283596341909547
Val: Best th posible
('0.05', '0.00')
0.9375337214677012
Test: Optimized
0.9585988583403523
Test: Best th posible
('0.05', '0.00')
0.9585988583403523

==========
Max gpu_usage: 31830

 ===== Total time for GBSN05101021_short_0-0. Execute time was:
Minutes: 3.26
Seconds: 195.76
