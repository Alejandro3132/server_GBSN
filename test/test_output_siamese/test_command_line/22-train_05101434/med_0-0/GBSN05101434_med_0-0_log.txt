ds_op:  {'exp_label': 'med'}
experiment repetition:  0  of  1
data_type_list:  ['med']

Sparse mode: False
device cuda:7
tensor type torch.FloatTensor
Epochs: 150
Batch size: 256
Starting with exp_op:
('model_args', {'raw_components_list': [{'class': <class 'siamese_graph.GBFeatures'>, 'args': {'conv_layers_num': 12, 'conv_type': <class 'torch_geometric.nn.conv.le_conv.LEConv'>, 'h_ch': 64, 'out_ch': 64, 'pool_type': <class 'siamese_graph.GlobalAttentionSelect'>, 'pool_att_ch': 32, 'pool_att_layers': 4, 'pool_ref': 'last'}}], 'final_out_join': 'abs', 'final_out_layers_num': 4, 'final_out_ch': 64})


loss_fn: BCEWithLogitsLoss()
loss_fn_aux_dict:
('soft_f1_loss', <function soft_f1_loss at 0x7fc9df7beca0>)
('double_soft_f1_loss', <function double_soft_f1_loss at 0x7fc9df7bed30>)
('bound_f1_loss', <function bound_f1_loss at 0x7fc9df7bee50>)



===== Model:

 SiameseNetwork(
  (components): ModuleList(
    (0): GBFeatures(
      (conv_layers): ModuleList(
        (0): GCLayer(
          (conv): LEConv(38, 64)
          (norm): BatchNorm(64)
        )
        (1): GCLayer(
          (conv): LEConv(64, 64)
          (norm): BatchNorm(64)
        )
        (2): GCLayer(
          (conv): LEConv(64, 64)
          (norm): BatchNorm(64)
        )
        (3): GCLayer(
          (conv): LEConv(64, 64)
          (norm): BatchNorm(64)
        )
        (4): GCLayer(
          (conv): LEConv(64, 64)
          (norm): BatchNorm(64)
        )
        (5): GCLayer(
          (conv): LEConv(64, 64)
          (norm): BatchNorm(64)
        )
        (6): GCLayer(
          (conv): LEConv(64, 64)
          (norm): BatchNorm(64)
        )
        (7): GCLayer(
          (conv): LEConv(64, 64)
          (norm): BatchNorm(64)
        )
        (8): GCLayer(
          (conv): LEConv(64, 64)
          (norm): BatchNorm(64)
        )
        (9): GCLayer(
          (conv): LEConv(64, 64)
          (norm): BatchNorm(64)
        )
        (10): GCLayer(
          (conv): LEConv(64, 64)
          (norm): BatchNorm(64)
        )
        (11): GCLayer(
          (conv): LEConv(64, 64)
          (norm): BatchNorm(64)
        )
      )
      (pool): GlobalAttentionSelect(gate_nn=Sequential(
        (0): Linear(in_features=64, out_features=32, bias=True)
        (1): ReLU()
        (2): Linear(in_features=32, out_features=32, bias=True)
        (3): ReLU()
        (4): Linear(in_features=32, out_features=32, bias=True)
        (5): ReLU()
        (6): Linear(in_features=32, out_features=1, bias=True)
        (7): ReLU()
      ), nn=None)
    )
  )
  (final_out): Sequential(
    (0): Linear(in_features=64, out_features=64, bias=True)
    (1): ReLU()
    (2): Linear(in_features=64, out_features=64, bias=True)
    (3): ReLU()
    (4): Linear(in_features=64, out_features=64, bias=True)
    (5): ReLU()
    (6): Linear(in_features=64, out_features=1, bias=True)
  )
)

===== Optimizer:
Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.001
    weight_decay: 0
)

 ===== Train model. Execute time was:
Minutes: 2.88
Seconds: 172.65

 ===== Test last_model. Execute time was:
Minutes: 0.01
Seconds: 0.34

 ===== Test best_model. Execute time was:
Minutes: 0.01
Seconds: 0.33

 ===== Test best_model_sa. Execute time was:
Minutes: 0.01
Seconds: 0.33

Saving raw metrics in: ../test/test_output_siamese/test_command_line/22-train_05101434/med_0-0/GBSN05101434_med_0-0_metrics

 ===== best_model:
Epoch: 33
                           val       test
-------------------  ---------  ---------
main loss            0.469227   0.403749
average              0.774935   0.776055
roc_auc              0.0526316  0.0526316
f1_score             0.974359   0.974359
c_at_1               0.95       0.95
f_05                 0.959596   0.959596
brier                0.938089   0.943689
soft_f1_loss         0.0619755  0.0519828
double_soft_f1_loss  0.53083    0.525541
bound_f1_loss        0.0862358  0.0762773

 ===== best_model_sa:
Epoch: 44
                           val       test
-------------------  ---------  ---------
main loss            0.631646   0.472432
average              0.787395   0.787184
roc_auc              0.105263   0.105263
f1_score             0.974359   0.974359
c_at_1               0.95       0.95
f_05                 0.959596   0.959596
brier                0.947757   0.946704
soft_f1_loss         0.0359792  0.0392168
double_soft_f1_loss  0.517986   0.519518
bound_f1_loss        0.0603166  0.0635464

 ===== last_model:
Epoch: 149
                           val       test
-------------------  ---------  ---------
main loss            0.886203   0.640295
average              0.776734   0.774547
roc_auc              0.0526316  0.0526316
f1_score             0.974359   0.974359
c_at_1               0.95       0.95
f_05                 0.959596   0.959596
brier                0.947084   0.936149
soft_f1_loss         0.0378967  0.0507769
double_soft_f1_loss  0.518948   0.525384
bound_f1_loss        0.0622294  0.0750741

 ===== Early stop model:
Epoch: 33
Early stop model deactivated

===== Max average in val: 0.787395 epoch 44

===== Optimize threshold for best_model:
Test: Original
0.77605506386788
Val: Best th posible
('0.05', '0.00')
0.7766592428368456
Test: Optimized
0.7769720918036208
Test: Best th posible
('0.05', '0.00')
0.7769720918036208

===== Optimize threshold for best_model_sa:
Test: Original
0.7871843776308473
Val: Best th posible
('0.05', '0.00')
0.7877193609014197
Test: Optimized
0.7876616820062414
Test: Best th posible
('0.05', '0.00')
0.7876616820062414

==========
Max gpu_usage: 30816

 ===== Total time for GBSN05101434_med_0-0. Execute time was:
Minutes: 3.19
Seconds: 191.11
