ds_op:  {'exp_label': 'short'}
experiment repetition:  0  of  1
data_type_list:  ['short']

Sparse mode: False
device cuda:7
tensor type torch.FloatTensor
Epochs: 100
Batch size: 256
Starting with exp_op:
('model_args', {'raw_components_list': [{'class': <class 'siamese_graph.GBFeatures'>, 'args': {'conv_layers_num': 9, 'conv_type': <class 'torch_geometric.nn.conv.le_conv.LEConv'>, 'h_ch': 64, 'out_ch': 64, 'pool_type': <class 'siamese_graph.GlobalAttentionSelect'>, 'pool_att_ch': 32, 'pool_att_layers': 8, 'pool_ref': 'last'}}], 'final_out_join': 'abs', 'final_out_layers_num': 2, 'final_out_ch': 64})


loss_fn: BCEWithLogitsLoss()
loss_fn_aux_dict:
('soft_f1_loss', <function soft_f1_loss at 0x7fdb6598dca0>)
('double_soft_f1_loss', <function double_soft_f1_loss at 0x7fdb6598dd30>)
('bound_f1_loss', <function bound_f1_loss at 0x7fdb6598de50>)



===== Model:

 SiameseNetwork(
  (components): ModuleList(
    (0): GBFeatures(
      (conv_layers): ModuleList(
        (0): GCLayer(
          (conv): LEConv(38, 64)
          (norm): BatchNorm(64)
        )
        (1): GCLayer(
          (conv): LEConv(64, 64)
          (norm): BatchNorm(64)
        )
        (2): GCLayer(
          (conv): LEConv(64, 64)
          (norm): BatchNorm(64)
        )
        (3): GCLayer(
          (conv): LEConv(64, 64)
          (norm): BatchNorm(64)
        )
        (4): GCLayer(
          (conv): LEConv(64, 64)
          (norm): BatchNorm(64)
        )
        (5): GCLayer(
          (conv): LEConv(64, 64)
          (norm): BatchNorm(64)
        )
        (6): GCLayer(
          (conv): LEConv(64, 64)
          (norm): BatchNorm(64)
        )
        (7): GCLayer(
          (conv): LEConv(64, 64)
          (norm): BatchNorm(64)
        )
        (8): GCLayer(
          (conv): LEConv(64, 64)
          (norm): BatchNorm(64)
        )
      )
      (pool): GlobalAttentionSelect(gate_nn=Sequential(
        (0): Linear(in_features=64, out_features=32, bias=True)
        (1): ReLU()
        (2): Linear(in_features=32, out_features=32, bias=True)
        (3): ReLU()
        (4): Linear(in_features=32, out_features=32, bias=True)
        (5): ReLU()
        (6): Linear(in_features=32, out_features=32, bias=True)
        (7): ReLU()
        (8): Linear(in_features=32, out_features=32, bias=True)
        (9): ReLU()
        (10): Linear(in_features=32, out_features=32, bias=True)
        (11): ReLU()
        (12): Linear(in_features=32, out_features=32, bias=True)
        (13): ReLU()
        (14): Linear(in_features=32, out_features=1, bias=True)
        (15): ReLU()
      ), nn=None)
    )
  )
  (final_out): Sequential(
    (0): Linear(in_features=64, out_features=64, bias=True)
    (1): ReLU()
    (2): Linear(in_features=64, out_features=1, bias=True)
  )
)

===== Optimizer:
Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.001
    weight_decay: 0
)

 ===== Train model. Execute time was:
Minutes: 1.49
Seconds: 89.33

 ===== Test last_model. Execute time was:
Minutes: 0.00
Seconds: 0.24

 ===== Test best_model. Execute time was:
Minutes: 0.01
Seconds: 0.31

 ===== Test best_model_sa. Execute time was:
Minutes: 0.01
Seconds: 0.30

Saving raw metrics in: ../test/test_output_siamese/test_command_line/22-train_05101243/short_0-0/GBSN05101243_short_0-0_metrics

 ===== best_model:
Epoch: 72
                           val       test
-------------------  ---------  ---------
main loss            0.134949   1.86596
average              0.957709   0.818531
roc_auc              0.947368   0.263158
f1_score             0.974359   0.974359
c_at_1               0.95       0.95
f_05                 0.959596   0.959596
brier                0.95722    0.945543
soft_f1_loss         0.0305512  0.035298
double_soft_f1_loss  0.449503   0.517649
bound_f1_loss        0.0550071  0.0596369

 ===== best_model_sa:
Epoch: 56
                           val       test
-------------------  ---------  ---------
main loss            0.153099   1.81028
average              0.967774   0.819299
roc_auc              1          0.263158
f1_score             0.974359   0.974359
c_at_1               0.95       0.95
f_05                 0.959596   0.959596
brier                0.954917   0.949383
soft_f1_loss         0.0269398  0.0294319
double_soft_f1_loss  0.46852    0.514716
bound_f1_loss        0.0513579  0.0537835

 ===== last_model:
Epoch: 99
                           val       test
-------------------  ---------  ---------
main loss            0.139646   1.85922
average              0.936516   0.818074
roc_auc              0.842105   0.263158
f1_score             0.974359   0.974359
c_at_1               0.95       0.95
f_05                 0.959596   0.959596
brier                0.956517   0.943258
soft_f1_loss         0.0404602  0.0377802
double_soft_f1_loss  0.449254   0.51889
bound_f1_loss        0.0649391  0.0621132

 ===== Early stop model:
Epoch: 72
Early stop model deactivated

===== Max average in val: 0.967774 epoch 56

===== Optimize threshold for best_model:
Test: Original
0.81853120397254
Val: Best th posible
('0.90', '0.05')
0.9788882687262825
Test: Optimized
0.7909331897421279
Test: Best th posible
('0.05', '0.00')
0.8191756511217859

===== Optimize threshold for best_model_sa:
Test: Original
0.8192991234188323
Val: Best th posible
('0.95', '0.00')
0.9951443317001083
Test: Optimized
0.7974754813146089
Test: Best th posible
('0.05', '0.00')
0.819388371190011

==========
Max gpu_usage: 31818

 ===== Total time for GBSN05101243_short_0-0. Execute time was:
Minutes: 1.77
Seconds: 106.30
