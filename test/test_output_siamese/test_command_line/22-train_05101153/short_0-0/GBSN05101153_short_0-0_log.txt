ds_op:  {'exp_label': 'short'}
experiment repetition:  0  of  1
data_type_list:  ['short']

Sparse mode: False
device cuda:7
tensor type torch.FloatTensor
Epochs: 100
Batch size: 256
Starting with exp_op:
('model_args', {'raw_components_list': [{'class': <class 'siamese_graph.GBFeatures'>, 'args': {'conv_layers_num': 9, 'conv_type': <class 'torch_geometric.nn.conv.le_conv.LEConv'>, 'h_ch': 64, 'out_ch': 64, 'pool_type': <class 'siamese_graph.GlobalAttentionSelect'>, 'pool_att_ch': 32, 'pool_att_layers': 6, 'pool_ref': 'last'}}], 'final_out_join': 'abs', 'final_out_layers_num': 4, 'final_out_ch': 64})


loss_fn: BCEWithLogitsLoss()
loss_fn_aux_dict:
('soft_f1_loss', <function soft_f1_loss at 0x7f169a830ca0>)
('double_soft_f1_loss', <function double_soft_f1_loss at 0x7f169a830d30>)
('bound_f1_loss', <function bound_f1_loss at 0x7f169a830e50>)



===== Model:

 SiameseNetwork(
  (components): ModuleList(
    (0): GBFeatures(
      (conv_layers): ModuleList(
        (0): GCLayer(
          (conv): LEConv(38, 64)
          (norm): BatchNorm(64)
        )
        (1): GCLayer(
          (conv): LEConv(64, 64)
          (norm): BatchNorm(64)
        )
        (2): GCLayer(
          (conv): LEConv(64, 64)
          (norm): BatchNorm(64)
        )
        (3): GCLayer(
          (conv): LEConv(64, 64)
          (norm): BatchNorm(64)
        )
        (4): GCLayer(
          (conv): LEConv(64, 64)
          (norm): BatchNorm(64)
        )
        (5): GCLayer(
          (conv): LEConv(64, 64)
          (norm): BatchNorm(64)
        )
        (6): GCLayer(
          (conv): LEConv(64, 64)
          (norm): BatchNorm(64)
        )
        (7): GCLayer(
          (conv): LEConv(64, 64)
          (norm): BatchNorm(64)
        )
        (8): GCLayer(
          (conv): LEConv(64, 64)
          (norm): BatchNorm(64)
        )
      )
      (pool): GlobalAttentionSelect(gate_nn=Sequential(
        (0): Linear(in_features=64, out_features=32, bias=True)
        (1): ReLU()
        (2): Linear(in_features=32, out_features=32, bias=True)
        (3): ReLU()
        (4): Linear(in_features=32, out_features=32, bias=True)
        (5): ReLU()
        (6): Linear(in_features=32, out_features=32, bias=True)
        (7): ReLU()
        (8): Linear(in_features=32, out_features=32, bias=True)
        (9): ReLU()
        (10): Linear(in_features=32, out_features=1, bias=True)
        (11): ReLU()
      ), nn=None)
    )
  )
  (final_out): Sequential(
    (0): Linear(in_features=64, out_features=64, bias=True)
    (1): ReLU()
    (2): Linear(in_features=64, out_features=64, bias=True)
    (3): ReLU()
    (4): Linear(in_features=64, out_features=64, bias=True)
    (5): ReLU()
    (6): Linear(in_features=64, out_features=1, bias=True)
  )
)

===== Optimizer:
Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.001
    weight_decay: 0
)

 ===== Train model. Execute time was:
Minutes: 1.86
Seconds: 111.50

 ===== Test last_model. Execute time was:
Minutes: 0.01
Seconds: 0.34

 ===== Test best_model. Execute time was:
Minutes: 0.00
Seconds: 0.28

 ===== Test best_model_sa. Execute time was:
Minutes: 0.00
Seconds: 0.30

Saving raw metrics in: ../test/test_output_siamese/test_command_line/22-train_05101153/short_0-0/GBSN05101153_short_0-0_metrics

 ===== best_model:
Epoch: 23
                          val      test
-------------------  --------  --------
main loss            0.378431  0.350468
average              0.777914  0.810963
roc_auc              0.105263  0.263158
f1_score             0.974359  0.974359
c_at_1               0.95      0.95
f_05                 0.959596  0.959596
brier                0.900353  0.907701
soft_f1_loss         0.144816  0.159457
double_soft_f1_loss  0.560146  0.546053
bound_f1_loss        0.168684  0.183364

 ===== best_model_sa:
Epoch: 50
                           val       test
-------------------  ---------  ---------
main loss            0.818025   2.72346
average              0.945619   0.829948
roc_auc              0.894737   0.315789
f1_score             0.974359   0.974359
c_at_1               0.95       0.95
f_05                 0.959596   0.959596
brier                0.949405   0.949997
soft_f1_loss         0.0295178  0.0259399
double_soft_f1_loss  0.514759   0.51297
bound_f1_loss        0.0538692  0.0502983

 ===== last_model:
Epoch: 99
                           val       test
-------------------  ---------  ---------
main loss            0.471293   1.92398
average              0.94542    0.808747
roc_auc              0.894737   0.210526
f1_score             0.974359   0.974359
c_at_1               0.95       0.95
f_05                 0.959596   0.959596
brier                0.94841    0.949253
soft_f1_loss         0.0317603  0.0298941
double_soft_f1_loss  0.515796   0.514947
bound_f1_loss        0.0561072  0.0542447

 ===== Early stop model:
Epoch: 23
Early stop model deactivated

===== Max average in val: 0.945619 epoch 50

===== Optimize threshold for best_model:
Test: Original
0.8109628195414326
Val: Best th posible
('0.05', '0.00')
0.7854092195056744
Test: Optimized
0.8180598279273316
Test: Best th posible
('0.05', '0.00')
0.8180598279273316

===== Optimize threshold for best_model_sa:
Test: Original
0.8299482406739779
Val: Best th posible
('0.05', '0.00')
0.9457053963117101
Test: Optimized
0.8299487040059865
Test: Best th posible
('0.05', '0.00')
0.8299487040059865

==========
Max gpu_usage: 31816

 ===== Total time for GBSN05101153_short_0-0. Execute time was:
Minutes: 2.16
Seconds: 129.79
