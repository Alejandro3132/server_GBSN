ds_op:  {'exp_label': 'med'}
experiment repetition:  0  of  1
data_type_list:  ['med']

Sparse mode: False
device cuda:7
tensor type torch.FloatTensor
Epochs: 150
Batch size: 256
Starting with exp_op:
('model_args', {'raw_components_list': [{'class': <class 'siamese_graph.GBFeatures'>, 'args': {'conv_layers_num': 12, 'conv_type': <class 'torch_geometric.nn.conv.graph_conv.GraphConv'>, 'h_ch': 64, 'out_ch': 64, 'pool_type': <class 'siamese_graph.GlobalAttentionSelect'>, 'pool_att_ch': 32, 'pool_att_layers': 4, 'pool_ref': 'last'}}], 'final_out_join': 'abs', 'final_out_layers_num': 4, 'final_out_ch': 64})


loss_fn: BCEWithLogitsLoss()
loss_fn_aux_dict:
('soft_f1_loss', <function soft_f1_loss at 0x7fbf92440ca0>)
('double_soft_f1_loss', <function double_soft_f1_loss at 0x7fbf92440d30>)
('bound_f1_loss', <function bound_f1_loss at 0x7fbf92440e50>)



===== Model:

 SiameseNetwork(
  (components): ModuleList(
    (0): GBFeatures(
      (conv_layers): ModuleList(
        (0): GCLayer(
          (conv): GraphConv(38, 64)
          (norm): BatchNorm(64)
        )
        (1): GCLayer(
          (conv): GraphConv(64, 64)
          (norm): BatchNorm(64)
        )
        (2): GCLayer(
          (conv): GraphConv(64, 64)
          (norm): BatchNorm(64)
        )
        (3): GCLayer(
          (conv): GraphConv(64, 64)
          (norm): BatchNorm(64)
        )
        (4): GCLayer(
          (conv): GraphConv(64, 64)
          (norm): BatchNorm(64)
        )
        (5): GCLayer(
          (conv): GraphConv(64, 64)
          (norm): BatchNorm(64)
        )
        (6): GCLayer(
          (conv): GraphConv(64, 64)
          (norm): BatchNorm(64)
        )
        (7): GCLayer(
          (conv): GraphConv(64, 64)
          (norm): BatchNorm(64)
        )
        (8): GCLayer(
          (conv): GraphConv(64, 64)
          (norm): BatchNorm(64)
        )
        (9): GCLayer(
          (conv): GraphConv(64, 64)
          (norm): BatchNorm(64)
        )
        (10): GCLayer(
          (conv): GraphConv(64, 64)
          (norm): BatchNorm(64)
        )
        (11): GCLayer(
          (conv): GraphConv(64, 64)
          (norm): BatchNorm(64)
        )
      )
      (pool): GlobalAttentionSelect(gate_nn=Sequential(
        (0): Linear(in_features=64, out_features=32, bias=True)
        (1): ReLU()
        (2): Linear(in_features=32, out_features=32, bias=True)
        (3): ReLU()
        (4): Linear(in_features=32, out_features=32, bias=True)
        (5): ReLU()
        (6): Linear(in_features=32, out_features=1, bias=True)
        (7): ReLU()
      ), nn=None)
    )
  )
  (final_out): Sequential(
    (0): Linear(in_features=64, out_features=64, bias=True)
    (1): ReLU()
    (2): Linear(in_features=64, out_features=64, bias=True)
    (3): ReLU()
    (4): Linear(in_features=64, out_features=64, bias=True)
    (5): ReLU()
    (6): Linear(in_features=64, out_features=1, bias=True)
  )
)

===== Optimizer:
Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.001
    weight_decay: 0
)

 ===== Train model. Execute time was:
Minutes: 3.08
Seconds: 184.92

 ===== Test last_model. Execute time was:
Minutes: 0.01
Seconds: 0.39

 ===== Test best_model. Execute time was:
Minutes: 0.01
Seconds: 0.35

 ===== Test best_model_sa. Execute time was:
Minutes: 0.01
Seconds: 0.38

Saving raw metrics in: ../test/test_output_siamese/test_command_line/22-train_05101640/med_0-0/GBSN05101640_med_0-0_metrics

 ===== best_model:
Epoch: 25
                           val       test
-------------------  ---------  ---------
main loss            0.0997209  0.781804
average              0.960022   0.77652
roc_auc              0.947368   0.0526316
f1_score             0.974359   0.974359
c_at_1               0.95       0.95
f_05                 0.959596   0.959596
brier                0.968785   0.946016
soft_f1_loss         0.0390231  0.0399018
double_soft_f1_loss  0.356154   0.519951
bound_f1_loss        0.063785   0.0642295

 ===== best_model_sa:
Epoch: 25
                           val       test
-------------------  ---------  ---------
main loss            0.0997209  0.781803
average              0.960022   0.77652
roc_auc              0.947368   0.0526316
f1_score             0.974359   0.974359
c_at_1               0.95       0.95
f_05                 0.959596   0.959596
brier                0.968785   0.946016
soft_f1_loss         0.0390231  0.0399018
double_soft_f1_loss  0.356154   0.519951
bound_f1_loss        0.063785   0.0642295

 ===== last_model:
Epoch: 149
                           val       test
-------------------  ---------  ---------
main loss            1.1324     1.68372
average              0.795574   0.79229
roc_auc              0.263158   0.263158
f1_score             0.947368   0.947368
c_at_1               0.9        0.9
f_05                 0.947368   0.947368
brier                0.919978   0.903557
soft_f1_loss         0.0496325  0.0540808
double_soft_f1_loss  0.524816   0.52704
bound_f1_loss        0.0739333  0.0783677

 ===== Early stop model:
Epoch: 25
Early stop model deactivated

===== Max average in val: 0.960022 epoch 25

===== Optimize threshold for best_model:
Test: Original
0.7765204816186246
Val: Best th posible
('0.60', '0.05')
0.9816947008461042
Test: Optimized
0.7756911344328129
Test: Best th posible
('0.05', '0.00')
0.7770965777410417

===== Optimize threshold for best_model_sa:
Test: Original
0.7765204837984809
Val: Best th posible
('0.60', '0.05')
0.9816947019259814
Test: Optimized
0.7756911388814993
Test: Best th posible
('0.05', '0.00')
0.7770965783448801

==========
Max gpu_usage: 32048

 ===== Total time for GBSN05101640_med_0-0. Execute time was:
Minutes: 3.41
Seconds: 204.76
