ds_op:  {'exp_label': 'med'}
experiment repetition:  0  of  1
data_type_list:  ['med']

Sparse mode: False
device cuda:7
tensor type torch.FloatTensor
Epochs: 150
Batch size: 256
Starting with exp_op:
('model_args', {'raw_components_list': [{'class': <class 'siamese_graph.GBFeatures'>, 'args': {'conv_layers_num': 12, 'conv_type': <class 'torch_geometric.nn.conv.le_conv.LEConv'>, 'h_ch': 64, 'out_ch': 64, 'pool_type': <class 'siamese_graph.GlobalAttentionSelect'>, 'pool_att_ch': 32, 'pool_att_layers': 4, 'pool_ref': 'last'}}], 'final_out_join': 'abs', 'final_out_layers_num': 4, 'final_out_ch': 64})


loss_fn: BCEWithLogitsLoss()
loss_fn_aux_dict:
('soft_f1_loss', <function soft_f1_loss at 0x7fbcd4da3ca0>)
('double_soft_f1_loss', <function double_soft_f1_loss at 0x7fbcd4da3d30>)
('bound_f1_loss', <function bound_f1_loss at 0x7fbcd4da3e50>)



===== Model:

 SiameseNetwork(
  (components): ModuleList(
    (0): GBFeatures(
      (conv_layers): ModuleList(
        (0): GCLayer(
          (conv): LEConv(38, 64)
          (norm): BatchNorm(64)
        )
        (1): GCLayer(
          (conv): LEConv(64, 64)
          (norm): BatchNorm(64)
        )
        (2): GCLayer(
          (conv): LEConv(64, 64)
          (norm): BatchNorm(64)
        )
        (3): GCLayer(
          (conv): LEConv(64, 64)
          (norm): BatchNorm(64)
        )
        (4): GCLayer(
          (conv): LEConv(64, 64)
          (norm): BatchNorm(64)
        )
        (5): GCLayer(
          (conv): LEConv(64, 64)
          (norm): BatchNorm(64)
        )
        (6): GCLayer(
          (conv): LEConv(64, 64)
          (norm): BatchNorm(64)
        )
        (7): GCLayer(
          (conv): LEConv(64, 64)
          (norm): BatchNorm(64)
        )
        (8): GCLayer(
          (conv): LEConv(64, 64)
          (norm): BatchNorm(64)
        )
        (9): GCLayer(
          (conv): LEConv(64, 64)
          (norm): BatchNorm(64)
        )
        (10): GCLayer(
          (conv): LEConv(64, 64)
          (norm): BatchNorm(64)
        )
        (11): GCLayer(
          (conv): LEConv(64, 64)
          (norm): BatchNorm(64)
        )
      )
      (pool): GlobalAttentionSelect(gate_nn=Sequential(
        (0): Linear(in_features=64, out_features=32, bias=True)
        (1): ReLU()
        (2): Linear(in_features=32, out_features=32, bias=True)
        (3): ReLU()
        (4): Linear(in_features=32, out_features=32, bias=True)
        (5): ReLU()
        (6): Linear(in_features=32, out_features=1, bias=True)
        (7): ReLU()
      ), nn=None)
    )
  )
  (final_out): Sequential(
    (0): Linear(in_features=64, out_features=64, bias=True)
    (1): ReLU()
    (2): Linear(in_features=64, out_features=64, bias=True)
    (3): ReLU()
    (4): Linear(in_features=64, out_features=64, bias=True)
    (5): ReLU()
    (6): Linear(in_features=64, out_features=1, bias=True)
  )
)

===== Optimizer:
Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.001
    weight_decay: 0
)

 ===== Train model. Execute time was:
Minutes: 2.98
Seconds: 178.99

 ===== Test last_model. Execute time was:
Minutes: 0.01
Seconds: 0.34

 ===== Test best_model. Execute time was:
Minutes: 0.01
Seconds: 0.34

 ===== Test best_model_sa. Execute time was:
Minutes: 0.01
Seconds: 0.33

Saving raw metrics in: ../test/test_output_siamese/test_command_line/22-train_05101427/med_0-0/GBSN05101427_med_0-0_metrics

 ===== best_model:
Epoch: 27
                          val      test
-------------------  --------  --------
main loss            0.429589  0.339228
average              0.759488  0.780213
roc_auc              0         0.105263
f1_score             0.974359  0.974359
c_at_1               0.95      0.95
f_05                 0.959596  0.959596
brier                0.913484  0.911847
soft_f1_loss         0.120488  0.131942
double_soft_f1_loss  0.558395  0.548666
bound_f1_loss        0.144463  0.155928

 ===== best_model_sa:
Epoch: 36
                           val       test
-------------------  ---------  ---------
main loss            0.530786   0.513144
average              0.787206   0.776227
roc_auc              0.105263   0.0526316
f1_score             0.974359   0.974359
c_at_1               0.95       0.95
f_05                 0.959596   0.959596
brier                0.946813   0.944549
soft_f1_loss         0.0423129  0.0459664
double_soft_f1_loss  0.521127   0.522938
bound_f1_loss        0.0666345  0.070278

 ===== last_model:
Epoch: 149
                           val       test
-------------------  ---------  ---------
main loss            1.59347    0.564074
average              0.758288   0.764232
roc_auc              0.0789474  0.105263
f1_score             0.947368   0.947368
c_at_1               0.9        0.9
f_05                 0.947368   0.947368
brier                0.917755   0.92116
soft_f1_loss         0.072217   0.0683391
double_soft_f1_loss  0.536108   0.534133
bound_f1_loss        0.0964374  0.0925751

 ===== Early stop model:
Epoch: 27
Early stop model deactivated

===== Max average in val: 0.787206 epoch 36

===== Optimize threshold for best_model:
Test: Original
0.7802130395901251
Val: Best th posible
('0.05', '0.00')
0.7648077157377628
Test: Optimized
0.7861448953325482
Test: Best th posible
('0.05', '0.00')
0.7861448953325482

===== Optimize threshold for best_model_sa:
Test: Original
0.7762270703584984
Val: Best th posible
('0.05', '0.00')
0.7876672961889502
Test: Optimized
0.7770156956565735
Test: Best th posible
('0.05', '0.00')
0.7770156956565735

==========
Max gpu_usage: 30814

 ===== Total time for GBSN05101427_med_0-0. Execute time was:
Minutes: 3.31
Seconds: 198.65
