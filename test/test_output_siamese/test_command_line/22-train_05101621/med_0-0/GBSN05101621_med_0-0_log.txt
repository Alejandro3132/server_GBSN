ds_op:  {'exp_label': 'med'}
experiment repetition:  0  of  1
data_type_list:  ['med']

Sparse mode: False
device cuda:7
tensor type torch.FloatTensor
Epochs: 150
Batch size: 256
Starting with exp_op:
('model_args', {'raw_components_list': [{'class': <class 'siamese_graph.GBFeatures'>, 'args': {'conv_layers_num': 9, 'conv_type': <class 'torch_geometric.nn.conv.graph_conv.GraphConv'>, 'h_ch': 64, 'out_ch': 64, 'pool_type': <class 'siamese_graph.GlobalAttentionSelect'>, 'pool_att_ch': 32, 'pool_att_layers': 4, 'pool_ref': 'last'}}], 'final_out_join': 'abs', 'final_out_layers_num': 4, 'final_out_ch': 64})


loss_fn: BCEWithLogitsLoss()
loss_fn_aux_dict:
('soft_f1_loss', <function soft_f1_loss at 0x7f9de2e7dca0>)
('double_soft_f1_loss', <function double_soft_f1_loss at 0x7f9de2e7dd30>)
('bound_f1_loss', <function bound_f1_loss at 0x7f9de2e7de50>)



===== Model:

 SiameseNetwork(
  (components): ModuleList(
    (0): GBFeatures(
      (conv_layers): ModuleList(
        (0): GCLayer(
          (conv): GraphConv(38, 64)
          (norm): BatchNorm(64)
        )
        (1): GCLayer(
          (conv): GraphConv(64, 64)
          (norm): BatchNorm(64)
        )
        (2): GCLayer(
          (conv): GraphConv(64, 64)
          (norm): BatchNorm(64)
        )
        (3): GCLayer(
          (conv): GraphConv(64, 64)
          (norm): BatchNorm(64)
        )
        (4): GCLayer(
          (conv): GraphConv(64, 64)
          (norm): BatchNorm(64)
        )
        (5): GCLayer(
          (conv): GraphConv(64, 64)
          (norm): BatchNorm(64)
        )
        (6): GCLayer(
          (conv): GraphConv(64, 64)
          (norm): BatchNorm(64)
        )
        (7): GCLayer(
          (conv): GraphConv(64, 64)
          (norm): BatchNorm(64)
        )
        (8): GCLayer(
          (conv): GraphConv(64, 64)
          (norm): BatchNorm(64)
        )
      )
      (pool): GlobalAttentionSelect(gate_nn=Sequential(
        (0): Linear(in_features=64, out_features=32, bias=True)
        (1): ReLU()
        (2): Linear(in_features=32, out_features=32, bias=True)
        (3): ReLU()
        (4): Linear(in_features=32, out_features=32, bias=True)
        (5): ReLU()
        (6): Linear(in_features=32, out_features=1, bias=True)
        (7): ReLU()
      ), nn=None)
    )
  )
  (final_out): Sequential(
    (0): Linear(in_features=64, out_features=64, bias=True)
    (1): ReLU()
    (2): Linear(in_features=64, out_features=64, bias=True)
    (3): ReLU()
    (4): Linear(in_features=64, out_features=64, bias=True)
    (5): ReLU()
    (6): Linear(in_features=64, out_features=1, bias=True)
  )
)

===== Optimizer:
Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.001
    weight_decay: 0
)

 ===== Train model. Execute time was:
Minutes: 2.83
Seconds: 169.81

 ===== Test last_model. Execute time was:
Minutes: 0.01
Seconds: 0.35

 ===== Test best_model. Execute time was:
Minutes: 0.01
Seconds: 0.37

 ===== Test best_model_sa. Execute time was:
Minutes: 0.00
Seconds: 0.29

Saving raw metrics in: ../test/test_output_siamese/test_command_line/22-train_05101621/med_0-0/GBSN05101621_med_0-0_metrics

 ===== best_model:
Epoch: 26
                           val       test
-------------------  ---------  ---------
main loss            0.184415   0.351022
average              0.924336   0.847201
roc_auc              0.789474   0.421053
f1_score             0.974359   0.974359
c_at_1               0.95       0.95
f_05                 0.959596   0.959596
brier                0.948253   0.930997
soft_f1_loss         0.0529402  0.0751851
double_soft_f1_loss  0.488198   0.53515
bound_f1_loss        0.0773294  0.0994011

 ===== best_model_sa:
Epoch: 2
                          val      test
-------------------  --------  --------
main loss            0.672231  0.672232
average              0.928882  0.897303
roc_auc              1         0.842105
f1_score             0.974359  0.974359
c_at_1               0.95      0.95
f_05                 0.959596  0.959596
brier                0.760456  0.760456
soft_f1_loss         0.334803  0.334803
double_soft_f1_loss  0.622045  0.622046
bound_f1_loss        0.356804  0.356804

 ===== last_model:
Epoch: 149
                           val       test
-------------------  ---------  ---------
main loss            1.12192    1.90064
average              0.818058   0.810258
roc_auc              0.263158   0.236842
f1_score             0.974359   0.974359
c_at_1               0.95       0.95
f_05                 0.959596   0.959596
brier                0.943178   0.930495
soft_f1_loss         0.0482323  0.0572959
double_soft_f1_loss  0.524116   0.528648
bound_f1_loss        0.0725372  0.0815721

 ===== Early stop model:
Epoch: 26
Early stop model deactivated

===== Max average in val: 0.928882 epoch 2

===== Optimize threshold for best_model:
Test: Original
0.847200884055215
Val: Best th posible
('0.05', '0.00')
0.9250028192465003
Test: Optimized
0.8499829278043839
Test: Best th posible
('0.05', '0.00')
0.8499829278043839

===== Optimize threshold for best_model_sa:
Test: Original
0.8973031480230048
Val: Best th posible
('0.05', '0.00')
0.9587244103276046
Test: Optimized
0.9271453474511631
Test: Best th posible
('0.05', '0.00')
0.9271453474511631

==========
Max gpu_usage: 31928

 ===== Total time for GBSN05101621_med_0-0. Execute time was:
Minutes: 3.15
Seconds: 188.88
