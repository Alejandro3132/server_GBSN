ds_op:  {'exp_label': 'short'}
experiment repetition:  0  of  1
data_type_list:  ['short']

Sparse mode: False
device cuda:7
tensor type torch.FloatTensor
Epochs: 100
Batch size: 256
Starting with exp_op:
('model_args', {'raw_components_list': [{'class': <class 'siamese_graph.GBFeatures'>, 'args': {'conv_layers_num': 9, 'conv_type': <class 'torch_geometric.nn.conv.le_conv.LEConv'>, 'h_ch': 64, 'out_ch': 64, 'pool_type': <class 'siamese_graph.GlobalAttentionSelect'>, 'pool_att_ch': 32, 'pool_att_layers': 6, 'pool_ref': 'last'}}], 'final_out_join': 'abs', 'final_out_layers_num': 4, 'final_out_ch': 64})


loss_fn: BCEWithLogitsLoss()
loss_fn_aux_dict:
('soft_f1_loss', <function soft_f1_loss at 0x7fd3e925dca0>)
('double_soft_f1_loss', <function double_soft_f1_loss at 0x7fd3e925dd30>)
('bound_f1_loss', <function bound_f1_loss at 0x7fd3e925de50>)



===== Model:

 SiameseNetwork(
  (components): ModuleList(
    (0): GBFeatures(
      (conv_layers): ModuleList(
        (0): GCLayer(
          (conv): LEConv(38, 64)
          (norm): BatchNorm(64)
        )
        (1): GCLayer(
          (conv): LEConv(64, 64)
          (norm): BatchNorm(64)
        )
        (2): GCLayer(
          (conv): LEConv(64, 64)
          (norm): BatchNorm(64)
        )
        (3): GCLayer(
          (conv): LEConv(64, 64)
          (norm): BatchNorm(64)
        )
        (4): GCLayer(
          (conv): LEConv(64, 64)
          (norm): BatchNorm(64)
        )
        (5): GCLayer(
          (conv): LEConv(64, 64)
          (norm): BatchNorm(64)
        )
        (6): GCLayer(
          (conv): LEConv(64, 64)
          (norm): BatchNorm(64)
        )
        (7): GCLayer(
          (conv): LEConv(64, 64)
          (norm): BatchNorm(64)
        )
        (8): GCLayer(
          (conv): LEConv(64, 64)
          (norm): BatchNorm(64)
        )
      )
      (pool): GlobalAttentionSelect(gate_nn=Sequential(
        (0): Linear(in_features=64, out_features=32, bias=True)
        (1): ReLU()
        (2): Linear(in_features=32, out_features=32, bias=True)
        (3): ReLU()
        (4): Linear(in_features=32, out_features=32, bias=True)
        (5): ReLU()
        (6): Linear(in_features=32, out_features=32, bias=True)
        (7): ReLU()
        (8): Linear(in_features=32, out_features=32, bias=True)
        (9): ReLU()
        (10): Linear(in_features=32, out_features=1, bias=True)
        (11): ReLU()
      ), nn=None)
    )
  )
  (final_out): Sequential(
    (0): Linear(in_features=64, out_features=64, bias=True)
    (1): ReLU()
    (2): Linear(in_features=64, out_features=64, bias=True)
    (3): ReLU()
    (4): Linear(in_features=64, out_features=64, bias=True)
    (5): ReLU()
    (6): Linear(in_features=64, out_features=1, bias=True)
  )
)

===== Optimizer:
Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.001
    weight_decay: 0
)

 ===== Train model. Execute time was:
Minutes: 1.91
Seconds: 114.39

 ===== Test last_model. Execute time was:
Minutes: 0.00
Seconds: 0.30

 ===== Test best_model. Execute time was:
Minutes: 0.01
Seconds: 0.33

 ===== Test best_model_sa. Execute time was:
Minutes: 0.00
Seconds: 0.30

Saving raw metrics in: ../test/test_output_siamese/test_command_line/22-train_05101150/short_0-0/GBSN05101150_short_0-0_metrics

 ===== best_model:
Epoch: 24
                          val      test
-------------------  --------  --------
main loss            0.364144  0.320313
average              0.790895  0.781603
roc_auc              0.157895  0.105263
f1_score             0.974359  0.974359
c_at_1               0.95      0.95
f_05                 0.959596  0.959596
brier                0.912623  0.918797
soft_f1_loss         0.119042  0.136872
double_soft_f1_loss  0.552538  0.540267
bound_f1_loss        0.143052  0.160892

 ===== best_model_sa:
Epoch: 46
                           val       test
-------------------  ---------  ---------
main loss            1.91812    3.8237
average              0.851      0.845737
roc_auc              0.421053   0.394737
f1_score             0.974359   0.974359
c_at_1               0.95       0.95
f_05                 0.959596   0.959596
brier                0.949993   0.949993
soft_f1_loss         0.0259513  0.0259448
double_soft_f1_loss  0.512976   0.512972
bound_f1_loss        0.0503097  0.0503032

 ===== last_model:
Epoch: 99
                           val       test
-------------------  ---------  ---------
main loss            1.50685    2.41802
average              0.840398   0.819062
roc_auc              0.368421   0.263158
f1_score             0.974359   0.974359
c_at_1               0.95       0.95
f_05                 0.959596   0.959596
brier                0.949615   0.948197
soft_f1_loss         0.027988   0.0313761
double_soft_f1_loss  0.513994   0.515688
bound_f1_loss        0.0523425  0.0557237

 ===== Early stop model:
Epoch: 24
Early stop model deactivated

===== Max average in val: 0.851 epoch 46

===== Optimize threshold for best_model:
Test: Original
0.7816030256151952
Val: Best th posible
('0.05', '0.00')
0.7964492213689262
Test: Optimized
0.7868265722529724
Test: Best th posible
('0.05', '0.00')
0.7868265722529724

===== Optimize threshold for best_model_sa:
Test: Original
0.8457370230291643
Val: Best th posible
('0.05', '0.00')
0.8510011410665805
Test: Optimized
0.8457379861863122
Test: Best th posible
('0.05', '0.00')
0.8457379861863122

==========
Max gpu_usage: 31816

 ===== Total time for GBSN05101150_short_0-0. Execute time was:
Minutes: 2.20
Seconds: 132.06
