ds_op:  {'exp_label': 'short'}
experiment repetition:  0  of  1
data_type_list:  ['short']

Sparse mode: False
device cuda:7
tensor type torch.FloatTensor
Epochs: 150
Batch size: 256
Starting with exp_op:
('model_args', {'raw_components_list': [{'class': <class 'siamese_graph.GBFeatures'>, 'args': {'conv_layers_num': 9, 'conv_type': <class 'torch_geometric.nn.conv.graph_conv.GraphConv'>, 'h_ch': 64, 'out_ch': 64, 'pool_type': <class 'siamese_graph.GlobalAttentionSelect'>, 'pool_att_ch': 32, 'pool_att_layers': 4, 'pool_ref': 'last'}}], 'final_out_join': 'abs', 'final_out_layers_num': 4, 'final_out_ch': 64})


loss_fn: BCEWithLogitsLoss()
loss_fn_aux_dict:
('soft_f1_loss', <function soft_f1_loss at 0x7f2b7164aca0>)
('double_soft_f1_loss', <function double_soft_f1_loss at 0x7f2b7164ad30>)
('bound_f1_loss', <function bound_f1_loss at 0x7f2b7164ae50>)



===== Model:

 SiameseNetwork(
  (components): ModuleList(
    (0): GBFeatures(
      (conv_layers): ModuleList(
        (0): GCLayer(
          (conv): GraphConv(38, 64)
          (norm): BatchNorm(64)
        )
        (1): GCLayer(
          (conv): GraphConv(64, 64)
          (norm): BatchNorm(64)
        )
        (2): GCLayer(
          (conv): GraphConv(64, 64)
          (norm): BatchNorm(64)
        )
        (3): GCLayer(
          (conv): GraphConv(64, 64)
          (norm): BatchNorm(64)
        )
        (4): GCLayer(
          (conv): GraphConv(64, 64)
          (norm): BatchNorm(64)
        )
        (5): GCLayer(
          (conv): GraphConv(64, 64)
          (norm): BatchNorm(64)
        )
        (6): GCLayer(
          (conv): GraphConv(64, 64)
          (norm): BatchNorm(64)
        )
        (7): GCLayer(
          (conv): GraphConv(64, 64)
          (norm): BatchNorm(64)
        )
        (8): GCLayer(
          (conv): GraphConv(64, 64)
          (norm): BatchNorm(64)
        )
      )
      (pool): GlobalAttentionSelect(gate_nn=Sequential(
        (0): Linear(in_features=64, out_features=32, bias=True)
        (1): ReLU()
        (2): Linear(in_features=32, out_features=32, bias=True)
        (3): ReLU()
        (4): Linear(in_features=32, out_features=32, bias=True)
        (5): ReLU()
        (6): Linear(in_features=32, out_features=1, bias=True)
        (7): ReLU()
      ), nn=None)
    )
  )
  (final_out): Sequential(
    (0): Linear(in_features=64, out_features=64, bias=True)
    (1): ReLU()
    (2): Linear(in_features=64, out_features=64, bias=True)
    (3): ReLU()
    (4): Linear(in_features=64, out_features=64, bias=True)
    (5): ReLU()
    (6): Linear(in_features=64, out_features=1, bias=True)
  )
)

===== Optimizer:
Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.001
    weight_decay: 0
)

 ===== Train model. Execute time was:
Minutes: 2.57
Seconds: 154.19

 ===== Test last_model. Execute time was:
Minutes: 0.01
Seconds: 0.31

 ===== Test best_model. Execute time was:
Minutes: 0.01
Seconds: 0.32

 ===== Test best_model_sa. Execute time was:
Minutes: 0.01
Seconds: 0.32

Saving raw metrics in: ../test/test_output_siamese/test_command_line/22-train_05100222/short_0-0/GBSN05100222_short_0-0_metrics

 ===== best_model:
Epoch: 34
                           val       test
-------------------  ---------  ---------
main loss            0.184302   0.170256
average              0.924352   0.935005
roc_auc              0.789474   0.842105
f1_score             0.974359   0.974359
c_at_1               0.95       0.95
f_05                 0.959596   0.959596
brier                0.948334   0.948967
soft_f1_loss         0.0436736  0.0452981
double_soft_f1_loss  0.490102   0.478538
bound_f1_loss        0.0680586  0.0697108

 ===== best_model_sa:
Epoch: 33
                           val       test
-------------------  ---------  ---------
main loss            0.19046    0.162124
average              0.934792   0.935259
roc_auc              0.842105   0.842105
f1_score             0.974359   0.974359
c_at_1               0.95       0.95
f_05                 0.959596   0.959596
brier                0.947898   0.950237
soft_f1_loss         0.0399614  0.0430996
double_soft_f1_loss  0.493632   0.471978
bound_f1_loss        0.0643396  0.0675269

 ===== last_model:
Epoch: 149
                          val      test
-------------------  --------  --------
main loss            0.322658  0.350926
average              0.903668  0.831363
roc_auc              1         0.578947
f1_score             0.882353  0.918919
c_at_1               0.8       0.85
f_05                 0.949367  0.934066
brier                0.88662   0.874881
soft_f1_loss         0.138287  0.125551
double_soft_f1_loss  0.464544  0.535515
bound_f1_loss        0.162875  0.149633

 ===== Early stop model:
Epoch: 34
Early stop model deactivated

===== Max average in val: 0.934792 epoch 33

===== Optimize threshold for best_model:
Test: Original
0.9350053869140865
Val: Best th posible
('0.80', '0.15')
0.9379843551376268
Test: Optimized
0.9388178651681016
Test: Best th posible
('0.80', '0.15')
0.9388178651681016

===== Optimize threshold for best_model_sa:
Test: Original
0.935259392943619
Val: Best th posible
('0.05', '0.00')
0.9353082815245226
Test: Optimized
0.9356765845551294
Test: Best th posible
('0.80', '0.15')
0.9413102846511137

==========
Max gpu_usage: 31870

 ===== Total time for GBSN05100222_short_0-0. Execute time was:
Minutes: 2.89
Seconds: 173.19
