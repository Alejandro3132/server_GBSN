ds_op:  {'exp_label': 'full'}
experiment repetition:  0  of  1
data_type_list:  ['full']

Sparse mode: False
device cuda:7
tensor type torch.FloatTensor
Epochs: 40
Batch size: 256
Starting with exp_op:
('model_args', {'raw_components_list': [{'class': <class 'siamese_graph.GBFeatures'>, 'args': {'conv_layers_num': 12, 'conv_type': <class 'torch_geometric.nn.conv.tag_conv.TAGConv'>, 'h_ch': 64, 'out_ch': 64, 'pool_type': <class 'siamese_graph.GlobalAttentionSelect'>, 'pool_att_ch': 32, 'pool_att_layers': 4, 'pool_ref': 'last'}}], 'final_out_join': 'abs', 'final_out_layers_num': 4, 'final_out_ch': 64})


loss_fn: BCEWithLogitsLoss()
loss_fn_aux_dict:
('soft_f1_loss', <function soft_f1_loss at 0x7faa5cb43ca0>)
('double_soft_f1_loss', <function double_soft_f1_loss at 0x7faa5cb43d30>)
('bound_f1_loss', <function bound_f1_loss at 0x7faa5cb43e50>)



===== Model:

 SiameseNetwork(
  (components): ModuleList(
    (0): GBFeatures(
      (conv_layers): ModuleList(
        (0): GCLayer(
          (conv): TAGConv(38, 64, K=3)
          (norm): BatchNorm(64)
        )
        (1): GCLayer(
          (conv): TAGConv(64, 64, K=3)
          (norm): BatchNorm(64)
        )
        (2): GCLayer(
          (conv): TAGConv(64, 64, K=3)
          (norm): BatchNorm(64)
        )
        (3): GCLayer(
          (conv): TAGConv(64, 64, K=3)
          (norm): BatchNorm(64)
        )
        (4): GCLayer(
          (conv): TAGConv(64, 64, K=3)
          (norm): BatchNorm(64)
        )
        (5): GCLayer(
          (conv): TAGConv(64, 64, K=3)
          (norm): BatchNorm(64)
        )
        (6): GCLayer(
          (conv): TAGConv(64, 64, K=3)
          (norm): BatchNorm(64)
        )
        (7): GCLayer(
          (conv): TAGConv(64, 64, K=3)
          (norm): BatchNorm(64)
        )
        (8): GCLayer(
          (conv): TAGConv(64, 64, K=3)
          (norm): BatchNorm(64)
        )
        (9): GCLayer(
          (conv): TAGConv(64, 64, K=3)
          (norm): BatchNorm(64)
        )
        (10): GCLayer(
          (conv): TAGConv(64, 64, K=3)
          (norm): BatchNorm(64)
        )
        (11): GCLayer(
          (conv): TAGConv(64, 64, K=3)
          (norm): BatchNorm(64)
        )
      )
      (pool): GlobalAttentionSelect(gate_nn=Sequential(
        (0): Linear(in_features=64, out_features=32, bias=True)
        (1): ReLU()
        (2): Linear(in_features=32, out_features=32, bias=True)
        (3): ReLU()
        (4): Linear(in_features=32, out_features=32, bias=True)
        (5): ReLU()
        (6): Linear(in_features=32, out_features=1, bias=True)
        (7): ReLU()
      ), nn=None)
    )
  )
  (final_out): Sequential(
    (0): Linear(in_features=64, out_features=64, bias=True)
    (1): ReLU()
    (2): Linear(in_features=64, out_features=64, bias=True)
    (3): ReLU()
    (4): Linear(in_features=64, out_features=64, bias=True)
    (5): ReLU()
    (6): Linear(in_features=64, out_features=1, bias=True)
  )
)

===== Optimizer:
Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.001
    weight_decay: 0
)

 ===== Train model. Execute time was:
Minutes: 0.84
Seconds: 50.40

 ===== Test last_model. Execute time was:
Minutes: 0.01
Seconds: 0.36

 ===== Test best_model. Execute time was:
Minutes: 0.01
Seconds: 0.34

 ===== Test best_model_sa. Execute time was:
Minutes: 0.01
Seconds: 0.35

Saving raw metrics in: ../test/test_output_siamese/test_command_line/22-train_05110029/full_0-0/GBSN05110029_full_0-0_metrics

 ===== best_model:
Epoch: 20
                          val       test
-------------------  --------  ---------
main loss            0.286062  0.22399
average              0.83519   0.90184
roc_auc              0.368421  0.684211
f1_score             0.974359  0.974359
c_at_1               0.95      0.95
f_05                 0.959596  0.959596
brier                0.923572  0.941036
soft_f1_loss         0.102181  0.0955241
double_soft_f1_loss  0.530273  0.486683
bound_f1_loss        0.126351  0.11992

 ===== best_model_sa:
Epoch: 17
                          val      test
-------------------  --------  --------
main loss            0.445374  0.446283
average              0.897766  0.908247
roc_auc              0.736842  0.789474
f1_score             0.974359  0.974359
c_at_1               0.95      0.95
f_05                 0.959596  0.959596
brier                0.868034  0.867805
soft_f1_loss         0.219209  0.220756
double_soft_f1_loss  0.560414  0.558245
bound_f1_loss        0.242744  0.244304

 ===== last_model:
Epoch: 39
                          val      test
-------------------  --------  --------
main loss            4.88994   1.08357
average              0.78184   0.781758
roc_auc              0.105263  0.131579
f1_score             0.974359  0.974359
c_at_1               0.95      0.95
f_05                 0.959596  0.959596
brier                0.919983  0.893254
soft_f1_loss         0.07827   0.124897
double_soft_f1_loss  0.539135  0.562449
bound_f1_loss        0.102465  0.148834

===== Early stop model:
Epoch: NA

===== Max average in val: 0.897766 epoch 17

===== Optimize threshold for best_model:
Test: Original
0.9018403625914624
Val: Best th posible
('0.05', '0.00')
0.8394110867968024
Test: Optimized
0.9043320136186057
Test: Best th posible
('0.05', '0.00')
0.9043320136186057

===== Optimize threshold for best_model_sa:
Test: Original
0.9082467717940462
Val: Best th posible
('0.05', '0.00')
0.9115371519790368
Test: Optimized
0.9221878732734952
Test: Best th posible
('0.05', '0.00')
0.9221878732734952

==========
Max gpu_usage: 32120

 ===== Total time for GBSN05110029_full_0-0. Execute time was:
Minutes: 1.16
Seconds: 69.57
