ds_op:  {'exp_label': 'short'}
experiment repetition:  0  of  1
data_type_list:  ['short']

Sparse mode: False
device cuda:7
tensor type torch.FloatTensor
Epochs: 100
Batch size: 256
Starting with exp_op:
('model_args', {'raw_components_list': [{'class': <class 'siamese_graph.GBFeatures'>, 'args': {'conv_layers_num': 12, 'conv_type': <class 'torch_geometric.nn.conv.le_conv.LEConv'>, 'h_ch': 64, 'out_ch': 64, 'pool_type': <class 'siamese_graph.GlobalAttentionSelect'>, 'pool_att_ch': 32, 'pool_att_layers': 4, 'pool_ref': 'last'}}], 'final_out_join': 'abs', 'final_out_layers_num': 4, 'final_out_ch': 64})


loss_fn: BCEWithLogitsLoss()
loss_fn_aux_dict:
('soft_f1_loss', <function soft_f1_loss at 0x7f8d028caca0>)
('double_soft_f1_loss', <function double_soft_f1_loss at 0x7f8d028cad30>)
('bound_f1_loss', <function bound_f1_loss at 0x7f8d028cae50>)



===== Model:

 SiameseNetwork(
  (components): ModuleList(
    (0): GBFeatures(
      (conv_layers): ModuleList(
        (0): GCLayer(
          (conv): LEConv(38, 64)
          (norm): BatchNorm(64)
        )
        (1): GCLayer(
          (conv): LEConv(64, 64)
          (norm): BatchNorm(64)
        )
        (2): GCLayer(
          (conv): LEConv(64, 64)
          (norm): BatchNorm(64)
        )
        (3): GCLayer(
          (conv): LEConv(64, 64)
          (norm): BatchNorm(64)
        )
        (4): GCLayer(
          (conv): LEConv(64, 64)
          (norm): BatchNorm(64)
        )
        (5): GCLayer(
          (conv): LEConv(64, 64)
          (norm): BatchNorm(64)
        )
        (6): GCLayer(
          (conv): LEConv(64, 64)
          (norm): BatchNorm(64)
        )
        (7): GCLayer(
          (conv): LEConv(64, 64)
          (norm): BatchNorm(64)
        )
        (8): GCLayer(
          (conv): LEConv(64, 64)
          (norm): BatchNorm(64)
        )
        (9): GCLayer(
          (conv): LEConv(64, 64)
          (norm): BatchNorm(64)
        )
        (10): GCLayer(
          (conv): LEConv(64, 64)
          (norm): BatchNorm(64)
        )
        (11): GCLayer(
          (conv): LEConv(64, 64)
          (norm): BatchNorm(64)
        )
      )
      (pool): GlobalAttentionSelect(gate_nn=Sequential(
        (0): Linear(in_features=64, out_features=32, bias=True)
        (1): ReLU()
        (2): Linear(in_features=32, out_features=32, bias=True)
        (3): ReLU()
        (4): Linear(in_features=32, out_features=32, bias=True)
        (5): ReLU()
        (6): Linear(in_features=32, out_features=1, bias=True)
        (7): ReLU()
      ), nn=None)
    )
  )
  (final_out): Sequential(
    (0): Linear(in_features=64, out_features=64, bias=True)
    (1): ReLU()
    (2): Linear(in_features=64, out_features=64, bias=True)
    (3): ReLU()
    (4): Linear(in_features=64, out_features=64, bias=True)
    (5): ReLU()
    (6): Linear(in_features=64, out_features=1, bias=True)
  )
)

===== Optimizer:
Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.001
    weight_decay: 0
)

 ===== Train model. Execute time was:
Minutes: 1.73
Seconds: 103.78

 ===== Test last_model. Execute time was:
Minutes: 0.01
Seconds: 0.39

 ===== Test best_model. Execute time was:
Minutes: 0.01
Seconds: 0.31

 ===== Test best_model_sa. Execute time was:
Minutes: 0.01
Seconds: 0.34

Saving raw metrics in: ../test/test_output_siamese/test_command_line/22-train_05100047/short_0-0/GBSN05100047_short_0-0_metrics

 ===== best_model:
Epoch: 96
                           val       test
-------------------  ---------  ---------
main loss            0.398992   2.72864
average              0.892478   0.823936
roc_auc              0.631579   0.289474
f1_score             0.974359   0.974359
c_at_1               0.95       0.95
f_05                 0.959596   0.959596
brier                0.946856   0.94625
soft_f1_loss         0.0355698  0.0365842
double_soft_f1_loss  0.517409   0.518292
bound_f1_loss        0.0599087  0.0609201

 ===== best_model_sa:
Epoch: 64
                           val       test
-------------------  ---------  ---------
main loss            0.477097   3.27472
average              0.924374   0.824348
roc_auc              0.789474   0.289474
f1_score             0.974359   0.974359
c_at_1               0.95       0.95
f_05                 0.959596   0.959596
brier                0.948444   0.94831
soft_f1_loss         0.0324259  0.0324108
double_soft_f1_loss  0.516138   0.516205
bound_f1_loss        0.0567714  0.0567562

 ===== last_model:
Epoch: 99
                           val       test
-------------------  ---------  ---------
main loss            0.401291   2.71139
average              0.892471   0.823908
roc_auc              0.631579   0.289474
f1_score             0.974359   0.974359
c_at_1               0.95       0.95
f_05                 0.959596   0.959596
brier                0.946821   0.946113
soft_f1_loss         0.0355526  0.036719
double_soft_f1_loss  0.517417   0.51836
bound_f1_loss        0.0598915  0.0610547

 ===== Early stop model:
Epoch: 23
Early stop model deactivated

===== Max average in val: 0.924374 epoch 64

===== Optimize threshold for best_model:
Test: Original
0.8239356878666712
Val: Best th posible
('0.05', '0.00')
0.8929351718536316
Test: Optimized
0.8244779574928092
Test: Best th posible
('0.05', '0.00')
0.8244779574928092

===== Optimize threshold for best_model_sa:
Test: Original
0.8243476245495523
Val: Best th posible
('0.05', '0.00')
0.9245999812036144
Test: Optimized
0.824592067377264
Test: Best th posible
('0.05', '0.00')
0.824592067377264

==========
Max gpu_usage: 31872

 ===== Total time for GBSN05100047_short_0-0. Execute time was:
Minutes: 2.03
Seconds: 121.72
