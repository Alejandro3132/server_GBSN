ds_op:  {'exp_label': 'short'}
experiment repetition:  0  of  1
data_type_list:  ['short']

Sparse mode: False
device cuda:7
tensor type torch.FloatTensor
Epochs: 100
Batch size: 256
Starting with exp_op:
('model_args', {'raw_components_list': [{'class': <class 'siamese_graph.GBFeatures'>, 'args': {'conv_layers_num': 9, 'conv_type': <class 'torch_geometric.nn.conv.le_conv.LEConv'>, 'h_ch': 64, 'out_ch': 64, 'pool_type': <class 'siamese_graph.GlobalAttentionSelect'>, 'pool_att_ch': 32, 'pool_att_layers': 4, 'pool_ref': 'last'}}], 'final_out_join': 'abs', 'final_out_layers_num': 4, 'final_out_ch': 64})


loss_fn: BCEWithLogitsLoss()
loss_fn_aux_dict:
('soft_f1_loss', <function soft_f1_loss at 0x7f35180bbca0>)
('double_soft_f1_loss', <function double_soft_f1_loss at 0x7f35180bbd30>)
('bound_f1_loss', <function bound_f1_loss at 0x7f35180bbe50>)



===== Model:

 SiameseNetwork(
  (components): ModuleList(
    (0): GBFeatures(
      (conv_layers): ModuleList(
        (0): GCLayer(
          (conv): LEConv(38, 64)
          (norm): BatchNorm(64)
        )
        (1): GCLayer(
          (conv): LEConv(64, 64)
          (norm): BatchNorm(64)
        )
        (2): GCLayer(
          (conv): LEConv(64, 64)
          (norm): BatchNorm(64)
        )
        (3): GCLayer(
          (conv): LEConv(64, 64)
          (norm): BatchNorm(64)
        )
        (4): GCLayer(
          (conv): LEConv(64, 64)
          (norm): BatchNorm(64)
        )
        (5): GCLayer(
          (conv): LEConv(64, 64)
          (norm): BatchNorm(64)
        )
        (6): GCLayer(
          (conv): LEConv(64, 64)
          (norm): BatchNorm(64)
        )
        (7): GCLayer(
          (conv): LEConv(64, 64)
          (norm): BatchNorm(64)
        )
        (8): GCLayer(
          (conv): LEConv(64, 64)
          (norm): BatchNorm(64)
        )
      )
      (pool): GlobalAttentionSelect(gate_nn=Sequential(
        (0): Linear(in_features=64, out_features=32, bias=True)
        (1): ReLU()
        (2): Linear(in_features=32, out_features=32, bias=True)
        (3): ReLU()
        (4): Linear(in_features=32, out_features=32, bias=True)
        (5): ReLU()
        (6): Linear(in_features=32, out_features=1, bias=True)
        (7): ReLU()
      ), nn=None)
    )
  )
  (final_out): Sequential(
    (0): Linear(in_features=64, out_features=64, bias=True)
    (1): ReLU()
    (2): Linear(in_features=64, out_features=64, bias=True)
    (3): ReLU()
    (4): Linear(in_features=64, out_features=64, bias=True)
    (5): ReLU()
    (6): Linear(in_features=64, out_features=1, bias=True)
  )
)

===== Optimizer:
Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.001
    weight_decay: 0
)

 ===== Train model. Execute time was:
Minutes: 1.73
Seconds: 103.58

 ===== Test last_model. Execute time was:
Minutes: 0.01
Seconds: 0.37

 ===== Test best_model. Execute time was:
Minutes: 0.01
Seconds: 0.38

 ===== Test best_model_sa. Execute time was:
Minutes: 0.01
Seconds: 0.38

Saving raw metrics in: ../test/test_output_siamese/test_command_line/22-train_05100032/short_0-0/GBSN05100032_short_0-0_metrics

 ===== best_model:
Epoch: 22
                          val      test
-------------------  --------  --------
main loss            0.323109  0.377762
average              0.873535  0.808062
roc_auc              0.578947  0.263158
f1_score             0.974359  0.974359
c_at_1               0.95      0.95
f_05                 0.959596  0.959596
brier                0.904773  0.893198
soft_f1_loss         0.13488   0.172038
double_soft_f1_loss  0.533509  0.552068
bound_f1_loss        0.158949  0.195852

 ===== best_model_sa:
Epoch: 7
                          val      test
-------------------  --------  --------
main loss            0.654529  0.654545
average              0.93065   0.825386
roc_auc              1         0.473684
f1_score             0.974359  0.974359
c_at_1               0.95      0.95
f_05                 0.959596  0.959596
brier                0.769297  0.769289
soft_f1_loss         0.326243  0.326249
double_soft_f1_loss  0.617851  0.61786
bound_f1_loss        0.348377  0.348383

 ===== last_model:
Epoch: 99
                           val       test
-------------------  ---------  ---------
main loss            0.33959    2.14925
average              0.91364    0.838565
roc_auc              0.736842   0.368421
f1_score             0.974359   0.974359
c_at_1               0.95       0.95
f_05                 0.959596   0.959596
brier                0.947402   0.940447
soft_f1_loss         0.037194   0.0376049
double_soft_f1_loss  0.517351   0.518802
bound_f1_loss        0.0615306  0.0619383

 ===== Early stop model:
Epoch: 22
Early stop model deactivated

===== Max average in val: 0.93065 epoch 7

===== Optimize threshold for best_model:
Test: Original
0.8080622643698613
Val: Best th posible
('0.05', '0.00')
0.8809302646746838
Test: Optimized
0.8173307445624207
Test: Best th posible
('0.05', '0.00')
0.8173307445624207

===== Optimize threshold for best_model_sa:
Test: Original
0.8253855972304518
Val: Best th posible
('0.05', '0.00')
0.9591635244477686
Test: Optimized
0.8538996352189671
Test: Best th posible
('0.05', '0.00')
0.8538996352189671

==========
Max gpu_usage: 31868

 ===== Total time for GBSN05100032_short_0-0. Execute time was:
Minutes: 2.04
Seconds: 122.48
