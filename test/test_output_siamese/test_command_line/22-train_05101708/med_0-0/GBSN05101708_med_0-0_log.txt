ds_op:  {'exp_label': 'med'}
experiment repetition:  0  of  1
data_type_list:  ['med']

Sparse mode: False
device cuda:7
tensor type torch.FloatTensor
Epochs: 130
Batch size: 256
Starting with exp_op:
('model_args', {'raw_components_list': [{'class': <class 'siamese_graph.GBFeatures'>, 'args': {'conv_layers_num': 12, 'conv_type': <class 'torch_geometric.nn.conv.tag_conv.TAGConv'>, 'h_ch': 64, 'out_ch': 64, 'pool_type': <class 'siamese_graph.GlobalAttentionSelect'>, 'pool_att_ch': 32, 'pool_att_layers': 4, 'pool_ref': 'last'}}], 'final_out_join': 'abs', 'final_out_layers_num': 4, 'final_out_ch': 64})


loss_fn: BCEWithLogitsLoss()
loss_fn_aux_dict:
('soft_f1_loss', <function soft_f1_loss at 0x7f9aed73eca0>)
('double_soft_f1_loss', <function double_soft_f1_loss at 0x7f9aed73ed30>)
('bound_f1_loss', <function bound_f1_loss at 0x7f9aed73ee50>)



===== Model:

 SiameseNetwork(
  (components): ModuleList(
    (0): GBFeatures(
      (conv_layers): ModuleList(
        (0): GCLayer(
          (conv): TAGConv(38, 64, K=3)
          (norm): BatchNorm(64)
        )
        (1): GCLayer(
          (conv): TAGConv(64, 64, K=3)
          (norm): BatchNorm(64)
        )
        (2): GCLayer(
          (conv): TAGConv(64, 64, K=3)
          (norm): BatchNorm(64)
        )
        (3): GCLayer(
          (conv): TAGConv(64, 64, K=3)
          (norm): BatchNorm(64)
        )
        (4): GCLayer(
          (conv): TAGConv(64, 64, K=3)
          (norm): BatchNorm(64)
        )
        (5): GCLayer(
          (conv): TAGConv(64, 64, K=3)
          (norm): BatchNorm(64)
        )
        (6): GCLayer(
          (conv): TAGConv(64, 64, K=3)
          (norm): BatchNorm(64)
        )
        (7): GCLayer(
          (conv): TAGConv(64, 64, K=3)
          (norm): BatchNorm(64)
        )
        (8): GCLayer(
          (conv): TAGConv(64, 64, K=3)
          (norm): BatchNorm(64)
        )
        (9): GCLayer(
          (conv): TAGConv(64, 64, K=3)
          (norm): BatchNorm(64)
        )
        (10): GCLayer(
          (conv): TAGConv(64, 64, K=3)
          (norm): BatchNorm(64)
        )
        (11): GCLayer(
          (conv): TAGConv(64, 64, K=3)
          (norm): BatchNorm(64)
        )
      )
      (pool): GlobalAttentionSelect(gate_nn=Sequential(
        (0): Linear(in_features=64, out_features=32, bias=True)
        (1): ReLU()
        (2): Linear(in_features=32, out_features=32, bias=True)
        (3): ReLU()
        (4): Linear(in_features=32, out_features=32, bias=True)
        (5): ReLU()
        (6): Linear(in_features=32, out_features=1, bias=True)
        (7): ReLU()
      ), nn=None)
    )
  )
  (final_out): Sequential(
    (0): Linear(in_features=64, out_features=64, bias=True)
    (1): ReLU()
    (2): Linear(in_features=64, out_features=64, bias=True)
    (3): ReLU()
    (4): Linear(in_features=64, out_features=64, bias=True)
    (5): ReLU()
    (6): Linear(in_features=64, out_features=1, bias=True)
  )
)

===== Optimizer:
Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.001
    weight_decay: 0
)

 ===== Train model. Execute time was:
Minutes: 2.63
Seconds: 157.80

 ===== Test last_model. Execute time was:
Minutes: 0.01
Seconds: 0.36

 ===== Test best_model. Execute time was:
Minutes: 0.01
Seconds: 0.33

 ===== Test best_model_sa. Execute time was:
Minutes: 0.01
Seconds: 0.34

Saving raw metrics in: ../test/test_output_siamese/test_command_line/22-train_05101708/med_0-0/GBSN05101708_med_0-0_metrics

 ===== best_model:
Epoch: 17
                          val      test
-------------------  --------  --------
main loss            0.612825  0.606451
average              0.734812  0.851218
roc_auc              0         0.578947
f1_score             0.974359  0.974359
c_at_1               0.95      0.95
f_05                 0.959596  0.959596
brier                0.790106  0.793187
soft_f1_loss         0.296759  0.302638
double_soft_f1_loss  0.618916  0.606095
bound_f1_loss        0.319148  0.325124

 ===== best_model_sa:
Epoch: 45
                           val       test
-------------------  ---------  ---------
main loss            5.24992    1.52292
average              0.823006   0.799996
roc_auc              0.289474   0.184211
f1_score             0.974359   0.974359
c_at_1               0.95       0.95
f_05                 0.959596   0.959596
brier                0.941601   0.931816
soft_f1_loss         0.0461701  0.0626897
double_soft_f1_loss  0.523085   0.531345
bound_f1_loss        0.070481   0.086947

 ===== last_model:
Epoch: 129
                           val      test
-------------------  ---------  --------
main loss            5.53694    1.81504
average              0.765225   0.66134
roc_auc              0.263158   0.157895
f1_score             0.918919   0.787879
c_at_1               0.85       0.65
f_05                 0.934066   0.866667
brier                0.859984   0.844262
soft_f1_loss         0.0982704  0.147634
double_soft_f1_loss  0.549135   0.573817
bound_f1_loss        0.122367   0.171407

 ===== Early stop model:
Epoch: 17
Early stop model deactivated

===== Max average in val: 0.823006 epoch 45

===== Optimize threshold for best_model:
Test: Original
0.8512178294605416
Val: Best th posible
('0.05', '0.00')
0.7593413659708395
Test: Optimized
0.8761446246702123
Test: Best th posible
('0.05', '0.00')
0.8761446246702123

===== Optimize threshold for best_model_sa:
Test: Original
0.7999962437858822
Val: Best th posible
('0.05', '0.00')
0.8242203995506425
Test: Optimized
0.8026256548607202
Test: Best th posible
('0.05', '0.00')
0.8026256548607202

==========
Max gpu_usage: 31962

 ===== Total time for GBSN05101708_med_0-0. Execute time was:
Minutes: 2.94
Seconds: 176.42
