ds_op:  {'exp_label': 'short'}
experiment repetition:  0  of  1
data_type_list:  ['short']

Sparse mode: False
device cuda:7
tensor type torch.FloatTensor
Epochs: 150
Batch size: 256
Starting with exp_op:
('model_args', {'raw_components_list': [{'class': <class 'siamese_graph.GBFeatures'>, 'args': {'conv_layers_num': 9, 'conv_type': <class 'torch_geometric.nn.conv.graph_conv.GraphConv'>, 'h_ch': 64, 'out_ch': 64, 'pool_type': <class 'siamese_graph.GlobalAttentionSelect'>, 'pool_att_ch': 32, 'pool_att_layers': 4, 'pool_ref': 'last'}}], 'final_out_join': 'abs', 'final_out_layers_num': 4, 'final_out_ch': 64})


loss_fn: BCEWithLogitsLoss()
loss_fn_aux_dict:
('soft_f1_loss', <function soft_f1_loss at 0x7f7f344acca0>)
('double_soft_f1_loss', <function double_soft_f1_loss at 0x7f7f344acd30>)
('bound_f1_loss', <function bound_f1_loss at 0x7f7f344ace50>)



===== Model:

 SiameseNetwork(
  (components): ModuleList(
    (0): GBFeatures(
      (conv_layers): ModuleList(
        (0): GCLayer(
          (conv): GraphConv(38, 64)
          (norm): BatchNorm(64)
        )
        (1): GCLayer(
          (conv): GraphConv(64, 64)
          (norm): BatchNorm(64)
        )
        (2): GCLayer(
          (conv): GraphConv(64, 64)
          (norm): BatchNorm(64)
        )
        (3): GCLayer(
          (conv): GraphConv(64, 64)
          (norm): BatchNorm(64)
        )
        (4): GCLayer(
          (conv): GraphConv(64, 64)
          (norm): BatchNorm(64)
        )
        (5): GCLayer(
          (conv): GraphConv(64, 64)
          (norm): BatchNorm(64)
        )
        (6): GCLayer(
          (conv): GraphConv(64, 64)
          (norm): BatchNorm(64)
        )
        (7): GCLayer(
          (conv): GraphConv(64, 64)
          (norm): BatchNorm(64)
        )
        (8): GCLayer(
          (conv): GraphConv(64, 64)
          (norm): BatchNorm(64)
        )
      )
      (pool): GlobalAttentionSelect(gate_nn=Sequential(
        (0): Linear(in_features=64, out_features=32, bias=True)
        (1): ReLU()
        (2): Linear(in_features=32, out_features=32, bias=True)
        (3): ReLU()
        (4): Linear(in_features=32, out_features=32, bias=True)
        (5): ReLU()
        (6): Linear(in_features=32, out_features=1, bias=True)
        (7): ReLU()
      ), nn=None)
    )
  )
  (final_out): Sequential(
    (0): Linear(in_features=64, out_features=64, bias=True)
    (1): ReLU()
    (2): Linear(in_features=64, out_features=64, bias=True)
    (3): ReLU()
    (4): Linear(in_features=64, out_features=64, bias=True)
    (5): ReLU()
    (6): Linear(in_features=64, out_features=1, bias=True)
  )
)

===== Optimizer:
Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.001
    weight_decay: 0
)

 ===== Train model. Execute time was:
Minutes: 2.76
Seconds: 165.56

 ===== Test last_model. Execute time was:
Minutes: 0.01
Seconds: 0.34

 ===== Test best_model. Execute time was:
Minutes: 0.01
Seconds: 0.32

 ===== Test best_model_sa. Execute time was:
Minutes: 0.01
Seconds: 0.34

Saving raw metrics in: ../test/test_output_siamese/test_command_line/22-train_05100230/short_0-0/GBSN05100230_short_0-0_metrics

 ===== best_model:
Epoch: 66
                           val       test
-------------------  ---------  ---------
main loss            0.236145   0.200274
average              0.878209   0.922577
roc_auc              0.578947   0.789474
f1_score             0.974359   0.974359
c_at_1               0.95       0.95
f_05                 0.959596   0.959596
brier                0.928144   0.939455
soft_f1_loss         0.0843342  0.0771661
double_soft_f1_loss  0.504324   0.476482
bound_f1_loss        0.108651   0.101605

 ===== best_model_sa:
Epoch: 134
                          val      test
-------------------  --------  --------
main loss            0.248957  0.24965
average              0.966059  0.918068
roc_auc              1         0.789474
f1_score             0.972973  0.974359
c_at_1               0.95      0.95
f_05                 0.989011  0.959596
brier                0.918311  0.916912
soft_f1_loss         0.107287  0.105362
double_soft_f1_loss  0.445021  0.463821
bound_f1_loss        0.131963  0.129902

 ===== last_model:
Epoch: 149
                          val      test
-------------------  --------  --------
main loss            0.299868  0.565601
average              0.914416  0.809338
roc_auc              0.947368  0.578947
f1_score             0.914286  0.888889
c_at_1               0.85      0.8
f_05                 0.963855  0.91954
brier                0.896568  0.859312
soft_f1_loss         0.128084  0.138437
double_soft_f1_loss  0.461971  0.498782
bound_f1_loss        0.152676  0.162741

 ===== Early stop model:
Epoch: 23
Early stop model deactivated

===== Max average in val: 0.966059 epoch 134

===== Optimize threshold for best_model:
Test: Original
0.9225767500203743
Val: Best th posible
('0.05', '0.00')
0.8820006671652398
Test: Optimized
0.9251044627102377
Test: Best th posible
('0.70', '0.10')
0.9334936980400714

===== Optimize threshold for best_model_sa:
Test: Original
0.9180681904170424
Val: Best th posible
('0.45', '0.05')
0.97198666622338
Test: Optimized
0.9180681904170424
Test: Best th posible
('0.55', '0.05')
0.9355604569460265

==========
Max gpu_usage: 31870

 ===== Total time for GBSN05100230_short_0-0. Execute time was:
Minutes: 3.08
Seconds: 185.10
