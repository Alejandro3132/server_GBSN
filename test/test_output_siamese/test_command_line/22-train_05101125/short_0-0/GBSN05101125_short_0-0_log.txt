ds_op:  {'exp_label': 'short'}
experiment repetition:  0  of  1
data_type_list:  ['short']

Sparse mode: False
device cuda:7
tensor type torch.FloatTensor
Epochs: 100
Batch size: 256
Starting with exp_op:
('model_args', {'raw_components_list': [{'class': <class 'siamese_graph.GBFeatures'>, 'args': {'conv_layers_num': 6, 'conv_type': <class 'torch_geometric.nn.conv.le_conv.LEConv'>, 'h_ch': 64, 'out_ch': 64, 'pool_type': <class 'siamese_graph.GlobalAttentionSelect'>, 'pool_att_ch': 32, 'pool_att_layers': 6, 'pool_ref': 'last'}}], 'final_out_join': 'abs', 'final_out_layers_num': 2, 'final_out_ch': 64})


loss_fn: BCEWithLogitsLoss()
loss_fn_aux_dict:
('soft_f1_loss', <function soft_f1_loss at 0x7f36763faca0>)
('double_soft_f1_loss', <function double_soft_f1_loss at 0x7f36763fad30>)
('bound_f1_loss', <function bound_f1_loss at 0x7f36763fae50>)



===== Model:

 SiameseNetwork(
  (components): ModuleList(
    (0): GBFeatures(
      (conv_layers): ModuleList(
        (0): GCLayer(
          (conv): LEConv(38, 64)
          (norm): BatchNorm(64)
        )
        (1): GCLayer(
          (conv): LEConv(64, 64)
          (norm): BatchNorm(64)
        )
        (2): GCLayer(
          (conv): LEConv(64, 64)
          (norm): BatchNorm(64)
        )
        (3): GCLayer(
          (conv): LEConv(64, 64)
          (norm): BatchNorm(64)
        )
        (4): GCLayer(
          (conv): LEConv(64, 64)
          (norm): BatchNorm(64)
        )
        (5): GCLayer(
          (conv): LEConv(64, 64)
          (norm): BatchNorm(64)
        )
      )
      (pool): GlobalAttentionSelect(gate_nn=Sequential(
        (0): Linear(in_features=64, out_features=32, bias=True)
        (1): ReLU()
        (2): Linear(in_features=32, out_features=32, bias=True)
        (3): ReLU()
        (4): Linear(in_features=32, out_features=32, bias=True)
        (5): ReLU()
        (6): Linear(in_features=32, out_features=32, bias=True)
        (7): ReLU()
        (8): Linear(in_features=32, out_features=32, bias=True)
        (9): ReLU()
        (10): Linear(in_features=32, out_features=1, bias=True)
        (11): ReLU()
      ), nn=None)
    )
  )
  (final_out): Sequential(
    (0): Linear(in_features=64, out_features=64, bias=True)
    (1): ReLU()
    (2): Linear(in_features=64, out_features=1, bias=True)
  )
)

===== Optimizer:
Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.001
    weight_decay: 0
)

 ===== Train model. Execute time was:
Minutes: 1.73
Seconds: 104.03

 ===== Test last_model. Execute time was:
Minutes: 0.00
Seconds: 0.29

 ===== Test best_model. Execute time was:
Minutes: 0.01
Seconds: 0.32

 ===== Test best_model_sa. Execute time was:
Minutes: 0.00
Seconds: 0.30

Saving raw metrics in: ../test/test_output_siamese/test_command_line/22-train_05101125/short_0-0/GBSN05101125_short_0-0_metrics

 ===== best_model:
Epoch: 24
                           val       test
-------------------  ---------  ---------
main loss            0.146025   0.238983
average              0.935655   0.859053
roc_auc              0.842105   0.473684
f1_score             0.974359   0.974359
c_at_1               0.95       0.95
f_05                 0.959596   0.959596
brier                0.952214   0.937624
soft_f1_loss         0.0532929  0.0728432
double_soft_f1_loss  0.430999   0.514736
bound_f1_loss        0.0778655  0.0971336

 ===== best_model_sa:
Epoch: 30
                           val       test
-------------------  ---------  ---------
main loss            0.187864   0.82348
average              0.944378   0.874578
roc_auc              0.894737   0.552632
f1_score             0.974359   0.974359
c_at_1               0.95       0.95
f_05                 0.959596   0.959596
brier                0.943201   0.936302
soft_f1_loss         0.0438583  0.0488909
double_soft_f1_loss  0.489951   0.524445
bound_f1_loss        0.0682436  0.073194

 ===== last_model:
Epoch: 99
                           val       test
-------------------  ---------  ---------
main loss            0.208695   1.14873
average              0.932498   0.819283
roc_auc              0.842105   0.289474
f1_score             0.974359   0.974359
c_at_1               0.95       0.95
f_05                 0.959596   0.959596
brier                0.93643    0.922989
soft_f1_loss         0.0510336  0.0609989
double_soft_f1_loss  0.499095   0.530499
bound_f1_loss        0.0753942  0.0852623

 ===== Early stop model:
Epoch: 24
Early stop model deactivated

===== Max average in val: 0.944378 epoch 30

===== Optimize threshold for best_model:
Test: Original
0.8590526084836956
Val: Best th posible
('0.70', '0.10')
0.9553939310201315
Test: Optimized
0.8263208384596743
Test: Best th posible
('0.05', '0.00')
0.8611482077143091

===== Optimize threshold for best_model_sa:
Test: Original
0.8745777803719559
Val: Best th posible
('0.75', '0.20')
0.9694532900815365
Test: Optimized
0.8548459094157795
Test: Best th posible
('0.05', '0.00')
0.8765584333513828

==========
Max gpu_usage: 31814

 ===== Total time for GBSN05101125_short_0-0. Execute time was:
Minutes: 2.02
Seconds: 120.96
