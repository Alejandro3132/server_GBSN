ds_op:  {'exp_label': 'short'}
experiment repetition:  0  of  1
data_type_list:  ['short']

Sparse mode: False
device cuda:7
tensor type torch.FloatTensor
Epochs: 100
Batch size: 256
Starting with exp_op:
('model_args', {'raw_components_list': [{'class': <class 'siamese_graph.GBFeatures'>, 'args': {'conv_layers_num': 9, 'conv_type': <class 'torch_geometric.nn.conv.le_conv.LEConv'>, 'h_ch': 64, 'out_ch': 64, 'pool_type': <class 'siamese_graph.GlobalAttentionSelect'>, 'pool_att_ch': 32, 'pool_att_layers': 8, 'pool_ref': 'last'}}], 'final_out_join': 'abs', 'final_out_layers_num': 4, 'final_out_ch': 64})


loss_fn: BCEWithLogitsLoss()
loss_fn_aux_dict:
('soft_f1_loss', <function soft_f1_loss at 0x7f42567d2ca0>)
('double_soft_f1_loss', <function double_soft_f1_loss at 0x7f42567d2d30>)
('bound_f1_loss', <function bound_f1_loss at 0x7f42567d2e50>)



===== Model:

 SiameseNetwork(
  (components): ModuleList(
    (0): GBFeatures(
      (conv_layers): ModuleList(
        (0): GCLayer(
          (conv): LEConv(38, 64)
          (norm): BatchNorm(64)
        )
        (1): GCLayer(
          (conv): LEConv(64, 64)
          (norm): BatchNorm(64)
        )
        (2): GCLayer(
          (conv): LEConv(64, 64)
          (norm): BatchNorm(64)
        )
        (3): GCLayer(
          (conv): LEConv(64, 64)
          (norm): BatchNorm(64)
        )
        (4): GCLayer(
          (conv): LEConv(64, 64)
          (norm): BatchNorm(64)
        )
        (5): GCLayer(
          (conv): LEConv(64, 64)
          (norm): BatchNorm(64)
        )
        (6): GCLayer(
          (conv): LEConv(64, 64)
          (norm): BatchNorm(64)
        )
        (7): GCLayer(
          (conv): LEConv(64, 64)
          (norm): BatchNorm(64)
        )
        (8): GCLayer(
          (conv): LEConv(64, 64)
          (norm): BatchNorm(64)
        )
      )
      (pool): GlobalAttentionSelect(gate_nn=Sequential(
        (0): Linear(in_features=64, out_features=32, bias=True)
        (1): ReLU()
        (2): Linear(in_features=32, out_features=32, bias=True)
        (3): ReLU()
        (4): Linear(in_features=32, out_features=32, bias=True)
        (5): ReLU()
        (6): Linear(in_features=32, out_features=32, bias=True)
        (7): ReLU()
        (8): Linear(in_features=32, out_features=32, bias=True)
        (9): ReLU()
        (10): Linear(in_features=32, out_features=32, bias=True)
        (11): ReLU()
        (12): Linear(in_features=32, out_features=32, bias=True)
        (13): ReLU()
        (14): Linear(in_features=32, out_features=1, bias=True)
        (15): ReLU()
      ), nn=None)
    )
  )
  (final_out): Sequential(
    (0): Linear(in_features=64, out_features=64, bias=True)
    (1): ReLU()
    (2): Linear(in_features=64, out_features=64, bias=True)
    (3): ReLU()
    (4): Linear(in_features=64, out_features=64, bias=True)
    (5): ReLU()
    (6): Linear(in_features=64, out_features=1, bias=True)
  )
)

===== Optimizer:
Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.001
    weight_decay: 0
)

 ===== Train model. Execute time was:
Minutes: 1.62
Seconds: 97.15

 ===== Test last_model. Execute time was:
Minutes: 0.00
Seconds: 0.27

 ===== Test best_model. Execute time was:
Minutes: 0.00
Seconds: 0.27

 ===== Test best_model_sa. Execute time was:
Minutes: 0.00
Seconds: 0.27

Saving raw metrics in: ../test/test_output_siamese/test_command_line/22-train_05101214/short_0-0/GBSN05101214_short_0-0_metrics

 ===== best_model:
Epoch: 31
                           val       test
-------------------  ---------  ---------
main loss            0.229525   0.3656
average              0.859153   0.764843
roc_auc              0.473684   0
f1_score             0.974359   0.974359
c_at_1               0.95       0.95
f_05                 0.959596   0.959596
brier                0.938127   0.940258
soft_f1_loss         0.0829287  0.060577
double_soft_f1_loss  0.506248   0.529101
bound_f1_loss        0.107239   0.0848451

 ===== best_model_sa:
Epoch: 98
                           val       test
-------------------  ---------  ---------
main loss            0.887614   2.74777
average              0.878438   0.828772
roc_auc              0.578947   0.315789
f1_score             0.974359   0.974359
c_at_1               0.95       0.95
f_05                 0.959596   0.959596
brier                0.929288   0.944115
soft_f1_loss         0.0649619  0.0372168
double_soft_f1_loss  0.532481   0.518608
bound_f1_loss        0.0892107  0.0615512

 ===== last_model:
Epoch: 99
                           val       test
-------------------  ---------  ---------
main loss            0.875744   2.7557
average              0.878241   0.828692
roc_auc              0.578947   0.315789
f1_score             0.974359   0.974359
c_at_1               0.95       0.95
f_05                 0.959596   0.959596
brier                0.928304   0.943713
soft_f1_loss         0.065816   0.0376636
double_soft_f1_loss  0.532908   0.518832
bound_f1_loss        0.0900617  0.0619969

 ===== Early stop model:
Epoch: 31
Early stop model deactivated

===== Max average in val: 0.878438 epoch 98

===== Optimize threshold for best_model:
Test: Original
0.7648425627615646
Val: Best th posible
('0.05', '0.00')
0.8614453116194619
Test: Optimized
0.7662648141120803
Test: Best th posible
('0.05', '0.00')
0.7662648141120803

===== Optimize threshold for best_model_sa:
Test: Original
0.8287719072971484
Val: Best th posible
('0.05', '0.00')
0.8814329595363164
Test: Optimized
0.829622849884981
Test: Best th posible
('0.05', '0.00')
0.829622849884981

==========
Max gpu_usage: 31818

 ===== Total time for GBSN05101214_short_0-0. Execute time was:
Minutes: 1.91
Seconds: 114.76
