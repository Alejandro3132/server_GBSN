ds_op:  {'exp_label': 'med'}
experiment repetition:  0  of  1
data_type_list:  ['med']

Sparse mode: False
device cuda:7
tensor type torch.FloatTensor
Epochs: 130
Batch size: 256
Starting with exp_op:
('model_args', {'raw_components_list': [{'class': <class 'siamese_graph.GBFeatures'>, 'args': {'conv_layers_num': 12, 'conv_type': <class 'torch_geometric.nn.conv.tag_conv.TAGConv'>, 'h_ch': 64, 'out_ch': 64, 'pool_type': <class 'siamese_graph.GlobalAttentionSelect'>, 'pool_att_ch': 32, 'pool_att_layers': 4, 'pool_ref': 'last'}}], 'final_out_join': 'abs', 'final_out_layers_num': 4, 'final_out_ch': 64})


loss_fn: BCEWithLogitsLoss()
loss_fn_aux_dict:
('soft_f1_loss', <function soft_f1_loss at 0x7f319dc91ca0>)
('double_soft_f1_loss', <function double_soft_f1_loss at 0x7f319dc91d30>)
('bound_f1_loss', <function bound_f1_loss at 0x7f319dc91e50>)



===== Model:

 SiameseNetwork(
  (components): ModuleList(
    (0): GBFeatures(
      (conv_layers): ModuleList(
        (0): GCLayer(
          (conv): TAGConv(38, 64, K=3)
          (norm): BatchNorm(64)
        )
        (1): GCLayer(
          (conv): TAGConv(64, 64, K=3)
          (norm): BatchNorm(64)
        )
        (2): GCLayer(
          (conv): TAGConv(64, 64, K=3)
          (norm): BatchNorm(64)
        )
        (3): GCLayer(
          (conv): TAGConv(64, 64, K=3)
          (norm): BatchNorm(64)
        )
        (4): GCLayer(
          (conv): TAGConv(64, 64, K=3)
          (norm): BatchNorm(64)
        )
        (5): GCLayer(
          (conv): TAGConv(64, 64, K=3)
          (norm): BatchNorm(64)
        )
        (6): GCLayer(
          (conv): TAGConv(64, 64, K=3)
          (norm): BatchNorm(64)
        )
        (7): GCLayer(
          (conv): TAGConv(64, 64, K=3)
          (norm): BatchNorm(64)
        )
        (8): GCLayer(
          (conv): TAGConv(64, 64, K=3)
          (norm): BatchNorm(64)
        )
        (9): GCLayer(
          (conv): TAGConv(64, 64, K=3)
          (norm): BatchNorm(64)
        )
        (10): GCLayer(
          (conv): TAGConv(64, 64, K=3)
          (norm): BatchNorm(64)
        )
        (11): GCLayer(
          (conv): TAGConv(64, 64, K=3)
          (norm): BatchNorm(64)
        )
      )
      (pool): GlobalAttentionSelect(gate_nn=Sequential(
        (0): Linear(in_features=64, out_features=32, bias=True)
        (1): ReLU()
        (2): Linear(in_features=32, out_features=32, bias=True)
        (3): ReLU()
        (4): Linear(in_features=32, out_features=32, bias=True)
        (5): ReLU()
        (6): Linear(in_features=32, out_features=1, bias=True)
        (7): ReLU()
      ), nn=None)
    )
  )
  (final_out): Sequential(
    (0): Linear(in_features=64, out_features=64, bias=True)
    (1): ReLU()
    (2): Linear(in_features=64, out_features=64, bias=True)
    (3): ReLU()
    (4): Linear(in_features=64, out_features=64, bias=True)
    (5): ReLU()
    (6): Linear(in_features=64, out_features=1, bias=True)
  )
)

===== Optimizer:
Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.001
    weight_decay: 0
)

 ===== Train model. Execute time was:
Minutes: 2.74
Seconds: 164.13

 ===== Test last_model. Execute time was:
Minutes: 0.01
Seconds: 0.37

 ===== Test best_model. Execute time was:
Minutes: 0.01
Seconds: 0.44

 ===== Test best_model_sa. Execute time was:
Minutes: 0.01
Seconds: 0.37

Saving raw metrics in: ../test/test_output_siamese/test_command_line/22-train_05101700/med_0-0/GBSN05101700_med_0-0_metrics

 ===== best_model:
Epoch: 18
                           val      test
-------------------  ---------  --------
main loss            0.587408   0.528384
average              0.748584   0.900816
roc_auc              0.0526316  0.789474
f1_score             0.974359   0.974359
c_at_1               0.95       0.95
f_05                 0.959596   0.959596
brier                0.806332   0.830651
soft_f1_loss         0.26742    0.263118
double_soft_f1_loss  0.61822    0.583641
bound_f1_loss        0.290066   0.286158

 ===== best_model_sa:
Epoch: 11
                          val      test
-------------------  --------  --------
main loss            0.670586  0.669505
average              0.844836  0.887049
roc_auc              0.578947  0.789474
f1_score             0.974359  0.974359
c_at_1               0.95      0.95
f_05                 0.959596  0.959596
brier                0.761278  0.761819
soft_f1_loss         0.334016  0.333507
double_soft_f1_loss  0.621638  0.621349
bound_f1_loss        0.35603   0.355529

 ===== last_model:
Epoch: 129
                           val      test
-------------------  ---------  --------
main loss            7.07628    0.629639
average              0.797015   0.81251
roc_auc              0.263158   0.684211
f1_score             0.947368   0.857143
c_at_1               0.9        0.75
f_05                 0.947368   0.903614
brier                0.927182   0.867582
soft_f1_loss         0.062258   0.105479
double_soft_f1_loss  0.531129   0.552672
bound_f1_loss        0.0865169  0.129536

 ===== Early stop model:
Epoch: 18
Early stop model deactivated

===== Max average in val: 0.844836 epoch 11

===== Optimize threshold for best_model:
Test: Original
0.9008160147809191
Val: Best th posible
('0.05', '0.00')
0.7700260582943483
Test: Optimized
0.9202278835776168
Test: Best th posible
('0.05', '0.00')
0.9202278835776168

===== Optimize threshold for best_model_sa:
Test: Original
0.8870494240723987
Val: Best th posible
('0.05', '0.00')
0.8745560104910368
Test: Optimized
0.9166904527235544
Test: Best th posible
('0.05', '0.00')
0.9166904527235544

==========
Max gpu_usage: 31962

 ===== Total time for GBSN05101700_med_0-0. Execute time was:
Minutes: 3.06
Seconds: 183.87
