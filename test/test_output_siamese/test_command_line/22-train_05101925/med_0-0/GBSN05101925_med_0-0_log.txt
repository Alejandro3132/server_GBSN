ds_op:  {'exp_label': 'med'}
experiment repetition:  0  of  1
data_type_list:  ['med']

Sparse mode: False
device cuda:7
tensor type torch.FloatTensor
Epochs: 100
Batch size: 256
Starting with exp_op:
('model_args', {'raw_components_list': [{'class': <class 'siamese_graph.GBFeatures'>, 'args': {'conv_layers_num': 9, 'conv_type': <class 'torch_geometric.nn.conv.le_conv.LEConv'>, 'h_ch': 64, 'out_ch': 64, 'pool_type': <class 'siamese_graph.GlobalAttentionSelect'>, 'pool_att_ch': 32, 'pool_att_layers': 8, 'pool_ref': 'last'}}], 'final_out_join': 'abs', 'final_out_layers_num': 4, 'final_out_ch': 64})


loss_fn: BCEWithLogitsLoss()
loss_fn_aux_dict:
('soft_f1_loss', <function soft_f1_loss at 0x7f45798e7ca0>)
('double_soft_f1_loss', <function double_soft_f1_loss at 0x7f45798e7d30>)
('bound_f1_loss', <function bound_f1_loss at 0x7f45798e7e50>)



===== Model:

 SiameseNetwork(
  (components): ModuleList(
    (0): GBFeatures(
      (conv_layers): ModuleList(
        (0): GCLayer(
          (conv): LEConv(38, 64)
          (norm): BatchNorm(64)
        )
        (1): GCLayer(
          (conv): LEConv(64, 64)
          (norm): BatchNorm(64)
        )
        (2): GCLayer(
          (conv): LEConv(64, 64)
          (norm): BatchNorm(64)
        )
        (3): GCLayer(
          (conv): LEConv(64, 64)
          (norm): BatchNorm(64)
        )
        (4): GCLayer(
          (conv): LEConv(64, 64)
          (norm): BatchNorm(64)
        )
        (5): GCLayer(
          (conv): LEConv(64, 64)
          (norm): BatchNorm(64)
        )
        (6): GCLayer(
          (conv): LEConv(64, 64)
          (norm): BatchNorm(64)
        )
        (7): GCLayer(
          (conv): LEConv(64, 64)
          (norm): BatchNorm(64)
        )
        (8): GCLayer(
          (conv): LEConv(64, 64)
          (norm): BatchNorm(64)
        )
      )
      (pool): GlobalAttentionSelect(gate_nn=Sequential(
        (0): Linear(in_features=64, out_features=32, bias=True)
        (1): ReLU()
        (2): Linear(in_features=32, out_features=32, bias=True)
        (3): ReLU()
        (4): Linear(in_features=32, out_features=32, bias=True)
        (5): ReLU()
        (6): Linear(in_features=32, out_features=32, bias=True)
        (7): ReLU()
        (8): Linear(in_features=32, out_features=32, bias=True)
        (9): ReLU()
        (10): Linear(in_features=32, out_features=32, bias=True)
        (11): ReLU()
        (12): Linear(in_features=32, out_features=32, bias=True)
        (13): ReLU()
        (14): Linear(in_features=32, out_features=1, bias=True)
        (15): ReLU()
      ), nn=None)
    )
  )
  (final_out): Sequential(
    (0): Linear(in_features=64, out_features=64, bias=True)
    (1): ReLU()
    (2): Linear(in_features=64, out_features=64, bias=True)
    (3): ReLU()
    (4): Linear(in_features=64, out_features=64, bias=True)
    (5): ReLU()
    (6): Linear(in_features=64, out_features=1, bias=True)
  )
)

===== Optimizer:
Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.001
    weight_decay: 0
)

 ===== Train model. Execute time was:
Minutes: 1.79
Seconds: 107.70

 ===== Test last_model. Execute time was:
Minutes: 0.01
Seconds: 0.31

 ===== Test best_model. Execute time was:
Minutes: 0.01
Seconds: 0.33

 ===== Test best_model_sa. Execute time was:
Minutes: 0.01
Seconds: 0.34

Saving raw metrics in: ../test/test_output_siamese/test_command_line/22-train_05101925/med_0-0/GBSN05101925_med_0-0_metrics

 ===== best_model:
Epoch: 28
                          val      test
-------------------  --------  --------
main loss            0.412604  0.344867
average              0.780928  0.760336
roc_auc              0.105263  0
f1_score             0.974359  0.974359
c_at_1               0.95      0.95
f_05                 0.959596  0.959596
brier                0.915422  0.917726
soft_f1_loss         0.114946  0.123614
double_soft_f1_loss  0.555249  0.550862
bound_f1_loss        0.138958  0.147617

 ===== best_model_sa:
Epoch: 38
                           val       test
-------------------  ---------  ---------
main loss            1.25977    1.16245
average              0.808691   0.798306
roc_auc              0.210526   0.157895
f1_score             0.974359   0.974359
c_at_1               0.95       0.95
f_05                 0.959596   0.959596
brier                0.948972   0.949678
soft_f1_loss         0.0318515  0.0291665
double_soft_f1_loss  0.515926   0.514583
bound_f1_loss        0.0561981  0.0535186

 ===== last_model:
Epoch: 99
                           val       test
-------------------  ---------  ---------
main loss            1.75808    0.570116
average              0.7978     0.840213
roc_auc              0.157895   0.368421
f1_score             0.974359   0.974359
c_at_1               0.95       0.95
f_05                 0.959596   0.959596
brier                0.947152   0.948689
soft_f1_loss         0.0324893  0.0329428
double_soft_f1_loss  0.516245   0.51646
bound_f1_loss        0.0568345  0.0572872

 ===== Early stop model:
Epoch: 28
Early stop model deactivated

===== Max average in val: 0.808691 epoch 38

===== Optimize threshold for best_model:
Test: Original
0.7603362662140551
Val: Best th posible
('0.05', '0.00')
0.7859738370405397
Test: Optimized
0.765247899720998
Test: Best th posible
('0.05', '0.00')
0.765247899720998

===== Optimize threshold for best_model_sa:
Test: Original
0.7983055672503885
Val: Best th posible
('0.05', '0.00')
0.808839288831549
Test: Optimized
0.7983521039907044
Test: Best th posible
('0.05', '0.00')
0.7983521039907044

==========
Max gpu_usage: 31926

 ===== Total time for GBSN05101925_med_0-0. Execute time was:
Minutes: 2.10
Seconds: 126.20
