ds_op:  {'exp_label': 'med'}
experiment repetition:  0  of  1
data_type_list:  ['med']

Sparse mode: False
device cuda:7
tensor type torch.FloatTensor
Epochs: 130
Batch size: 256
Starting with exp_op:
('model_args', {'raw_components_list': [{'class': <class 'siamese_graph.GBFeatures'>, 'args': {'conv_layers_num': 12, 'conv_type': <class 'torch_geometric.nn.conv.tag_conv.TAGConv'>, 'h_ch': 64, 'out_ch': 64, 'pool_type': <class 'siamese_graph.GlobalAttentionSelect'>, 'pool_att_ch': 32, 'pool_att_layers': 4, 'pool_ref': 'last'}}], 'final_out_join': 'abs', 'final_out_layers_num': 4, 'final_out_ch': 64})


loss_fn: BCEWithLogitsLoss()
loss_fn_aux_dict:
('soft_f1_loss', <function soft_f1_loss at 0x7f0aece6cca0>)
('double_soft_f1_loss', <function double_soft_f1_loss at 0x7f0aece6cd30>)
('bound_f1_loss', <function bound_f1_loss at 0x7f0aece6ce50>)



===== Model:

 SiameseNetwork(
  (components): ModuleList(
    (0): GBFeatures(
      (conv_layers): ModuleList(
        (0): GCLayer(
          (conv): TAGConv(38, 64, K=3)
          (norm): BatchNorm(64)
        )
        (1): GCLayer(
          (conv): TAGConv(64, 64, K=3)
          (norm): BatchNorm(64)
        )
        (2): GCLayer(
          (conv): TAGConv(64, 64, K=3)
          (norm): BatchNorm(64)
        )
        (3): GCLayer(
          (conv): TAGConv(64, 64, K=3)
          (norm): BatchNorm(64)
        )
        (4): GCLayer(
          (conv): TAGConv(64, 64, K=3)
          (norm): BatchNorm(64)
        )
        (5): GCLayer(
          (conv): TAGConv(64, 64, K=3)
          (norm): BatchNorm(64)
        )
        (6): GCLayer(
          (conv): TAGConv(64, 64, K=3)
          (norm): BatchNorm(64)
        )
        (7): GCLayer(
          (conv): TAGConv(64, 64, K=3)
          (norm): BatchNorm(64)
        )
        (8): GCLayer(
          (conv): TAGConv(64, 64, K=3)
          (norm): BatchNorm(64)
        )
        (9): GCLayer(
          (conv): TAGConv(64, 64, K=3)
          (norm): BatchNorm(64)
        )
        (10): GCLayer(
          (conv): TAGConv(64, 64, K=3)
          (norm): BatchNorm(64)
        )
        (11): GCLayer(
          (conv): TAGConv(64, 64, K=3)
          (norm): BatchNorm(64)
        )
      )
      (pool): GlobalAttentionSelect(gate_nn=Sequential(
        (0): Linear(in_features=64, out_features=32, bias=True)
        (1): ReLU()
        (2): Linear(in_features=32, out_features=32, bias=True)
        (3): ReLU()
        (4): Linear(in_features=32, out_features=32, bias=True)
        (5): ReLU()
        (6): Linear(in_features=32, out_features=1, bias=True)
        (7): ReLU()
      ), nn=None)
    )
  )
  (final_out): Sequential(
    (0): Linear(in_features=64, out_features=64, bias=True)
    (1): ReLU()
    (2): Linear(in_features=64, out_features=64, bias=True)
    (3): ReLU()
    (4): Linear(in_features=64, out_features=64, bias=True)
    (5): ReLU()
    (6): Linear(in_features=64, out_features=1, bias=True)
  )
)

===== Optimizer:
Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.001
    weight_decay: 0
)

 ===== Train model. Execute time was:
Minutes: 2.66
Seconds: 159.38

 ===== Test last_model. Execute time was:
Minutes: 0.01
Seconds: 0.36

 ===== Test best_model. Execute time was:
Minutes: 0.01
Seconds: 0.35

 ===== Test best_model_sa. Execute time was:
Minutes: 0.01
Seconds: 0.38

Saving raw metrics in: ../test/test_output_siamese/test_command_line/22-train_05101705/med_0-0/GBSN05101705_med_0-0_metrics

 ===== best_model:
Epoch: 20
                           val      test
-------------------  ---------  --------
main loss            0.486109   0.35044
average              0.761545   0.884418
roc_auc              0.0526316  0.631579
f1_score             0.974359   0.974359
c_at_1               0.95       0.95
f_05                 0.959596   0.959596
brier                0.87114    0.906558
soft_f1_loss         0.182198   0.164236
double_soft_f1_loss  0.586086   0.539537
bound_f1_loss        0.205709   0.188176

 ===== best_model_sa:
Epoch: 44
                           val       test
-------------------  ---------  ---------
main loss            5.06012    1.40258
average              0.82432    0.806394
roc_auc              0.289474   0.210526
f1_score             0.974359   0.974359
c_at_1               0.95       0.95
f_05                 0.959596   0.959596
brier                0.948173   0.937487
soft_f1_loss         0.0322192  0.0461654
double_soft_f1_loss  0.51611    0.523083
bound_f1_loss        0.0565649  0.0704762

 ===== last_model:
Epoch: 129
                          val       test
-------------------  --------  ---------
main loss            4.55855   0.254103
average              0.710354  0.889331
roc_auc              0.184211  0.842105
f1_score             0.857143  0.918919
c_at_1               0.75      0.85
f_05                 0.903614  0.934066
brier                0.856802  0.901566
soft_f1_loss         0.114257  0.0761713
double_soft_f1_loss  0.557128  0.471901
bound_f1_loss        0.138262  0.100629

 ===== Early stop model:
Epoch: 20
Early stop model deactivated

===== Max average in val: 0.82432 epoch 44

===== Optimize threshold for best_model:
Test: Original
0.8844184622570183
Val: Best th posible
('0.05', '0.00')
0.7731036997717778
Test: Optimized
0.8919926390658481
Test: Best th posible
('0.05', '0.00')
0.8919926390658481

===== Optimize threshold for best_model_sa:
Test: Original
0.8063936937396876
Val: Best th posible
('0.05', '0.00')
0.8245845090875752
Test: Optimized
0.8082030210820687
Test: Best th posible
('0.05', '0.00')
0.8082030210820687

==========
Max gpu_usage: 31962

 ===== Total time for GBSN05101705_med_0-0. Execute time was:
Minutes: 2.99
Seconds: 179.68
