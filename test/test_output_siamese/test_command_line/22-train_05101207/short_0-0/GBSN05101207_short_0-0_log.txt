ds_op:  {'exp_label': 'short'}
experiment repetition:  0  of  1
data_type_list:  ['short']

Sparse mode: False
device cuda:7
tensor type torch.FloatTensor
Epochs: 100
Batch size: 256
Starting with exp_op:
('model_args', {'raw_components_list': [{'class': <class 'siamese_graph.GBFeatures'>, 'args': {'conv_layers_num': 9, 'conv_type': <class 'torch_geometric.nn.conv.le_conv.LEConv'>, 'h_ch': 64, 'out_ch': 64, 'pool_type': <class 'siamese_graph.GlobalAttentionSelect'>, 'pool_att_ch': 32, 'pool_att_layers': 4, 'pool_ref': 'last'}}], 'final_out_join': 'abs', 'final_out_layers_num': 2, 'final_out_ch': 64})


loss_fn: BCEWithLogitsLoss()
loss_fn_aux_dict:
('soft_f1_loss', <function soft_f1_loss at 0x7f1c0cb6dca0>)
('double_soft_f1_loss', <function double_soft_f1_loss at 0x7f1c0cb6dd30>)
('bound_f1_loss', <function bound_f1_loss at 0x7f1c0cb6de50>)



===== Model:

 SiameseNetwork(
  (components): ModuleList(
    (0): GBFeatures(
      (conv_layers): ModuleList(
        (0): GCLayer(
          (conv): LEConv(38, 64)
          (norm): BatchNorm(64)
        )
        (1): GCLayer(
          (conv): LEConv(64, 64)
          (norm): BatchNorm(64)
        )
        (2): GCLayer(
          (conv): LEConv(64, 64)
          (norm): BatchNorm(64)
        )
        (3): GCLayer(
          (conv): LEConv(64, 64)
          (norm): BatchNorm(64)
        )
        (4): GCLayer(
          (conv): LEConv(64, 64)
          (norm): BatchNorm(64)
        )
        (5): GCLayer(
          (conv): LEConv(64, 64)
          (norm): BatchNorm(64)
        )
        (6): GCLayer(
          (conv): LEConv(64, 64)
          (norm): BatchNorm(64)
        )
        (7): GCLayer(
          (conv): LEConv(64, 64)
          (norm): BatchNorm(64)
        )
        (8): GCLayer(
          (conv): LEConv(64, 64)
          (norm): BatchNorm(64)
        )
      )
      (pool): GlobalAttentionSelect(gate_nn=Sequential(
        (0): Linear(in_features=64, out_features=32, bias=True)
        (1): ReLU()
        (2): Linear(in_features=32, out_features=32, bias=True)
        (3): ReLU()
        (4): Linear(in_features=32, out_features=32, bias=True)
        (5): ReLU()
        (6): Linear(in_features=32, out_features=1, bias=True)
        (7): ReLU()
      ), nn=None)
    )
  )
  (final_out): Sequential(
    (0): Linear(in_features=64, out_features=64, bias=True)
    (1): ReLU()
    (2): Linear(in_features=64, out_features=1, bias=True)
  )
)

===== Optimizer:
Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.001
    weight_decay: 0
)

 ===== Train model. Execute time was:
Minutes: 1.84
Seconds: 110.62

 ===== Test last_model. Execute time was:
Minutes: 0.01
Seconds: 0.45

 ===== Test best_model. Execute time was:
Minutes: 0.01
Seconds: 0.39

 ===== Test best_model_sa. Execute time was:
Minutes: 0.01
Seconds: 0.38

Saving raw metrics in: ../test/test_output_siamese/test_command_line/22-train_05101207/short_0-0/GBSN05101207_short_0-0_metrics

 ===== best_model:
Epoch: 88
                           val       test
-------------------  ---------  ---------
main loss            0.277233   0.888762
average              0.900834   0.812072
roc_auc              0.684211   0.236842
f1_score             0.974359   0.974359
c_at_1               0.95       0.95
f_05                 0.959596   0.959596
brier                0.936004   0.939562
soft_f1_loss         0.0541252  0.0387084
double_soft_f1_loss  0.520388   0.519354
bound_f1_loss        0.0784284  0.0630391

 ===== best_model_sa:
Epoch: 38
                           val       test
-------------------  ---------  ---------
main loss            0.300385   1.22615
average              0.944372   0.83467
roc_auc              0.894737   0.342105
f1_score             0.974359   0.974359
c_at_1               0.95       0.95
f_05                 0.959596   0.959596
brier                0.94317    0.947287
soft_f1_loss         0.0397827  0.0320985
double_soft_f1_loss  0.516902   0.516049
bound_f1_loss        0.0641162  0.0564445

 ===== last_model:
Epoch: 99
                          val       test
-------------------  --------  ---------
main loss            0.450434  0.73905
average              0.839894  0.859469
roc_auc              0.631579  0.473684
f1_score             0.918919  0.974359
c_at_1               0.85      0.95
f_05                 0.934066  0.959596
brier                0.864907  0.939705
soft_f1_loss         0.110398  0.0389533
double_soft_f1_loss  0.551417  0.519476
bound_f1_loss        0.134444  0.0632834

 ===== Early stop model:
Epoch: 34
Early stop model deactivated

===== Max average in val: 0.944372 epoch 38

===== Optimize threshold for best_model:
Test: Original
0.8120717610238046
Val: Best th posible
('0.05', '0.00')
0.9029269022104826
Test: Optimized
0.8135811123256644
Test: Best th posible
('0.05', '0.00')
0.8135811123256644

===== Optimize threshold for best_model_sa:
Test: Original
0.8346695317323244
Val: Best th posible
('0.05', '0.00')
0.9453829262933903
Test: Optimized
0.8350617602839947
Test: Best th posible
('0.05', '0.00')
0.8350617602839947

==========
Max gpu_usage: 31816

 ===== Total time for GBSN05101207_short_0-0. Execute time was:
Minutes: 2.16
Seconds: 129.34
