ds_op:  {'exp_label': 'med'}
experiment repetition:  0  of  1
data_type_list:  ['med']

Sparse mode: False
device cuda:7
tensor type torch.FloatTensor
Epochs: 150
Batch size: 256
Starting with exp_op:
('model_args', {'raw_components_list': [{'class': <class 'siamese_graph.GBFeatures'>, 'args': {'conv_layers_num': 12, 'conv_type': <class 'torch_geometric.nn.conv.le_conv.LEConv'>, 'h_ch': 64, 'out_ch': 64, 'pool_type': <class 'siamese_graph.GlobalAttentionSelect'>, 'pool_att_ch': 32, 'pool_att_layers': 4, 'pool_ref': 'last'}}], 'final_out_join': 'abs', 'final_out_layers_num': 4, 'final_out_ch': 64})


loss_fn: BCEWithLogitsLoss()
loss_fn_aux_dict:
('soft_f1_loss', <function soft_f1_loss at 0x7fed8e88fca0>)
('double_soft_f1_loss', <function double_soft_f1_loss at 0x7fed8e88fd30>)
('bound_f1_loss', <function bound_f1_loss at 0x7fed8e88fe50>)



===== Model:

 SiameseNetwork(
  (components): ModuleList(
    (0): GBFeatures(
      (conv_layers): ModuleList(
        (0): GCLayer(
          (conv): LEConv(38, 64)
          (norm): BatchNorm(64)
        )
        (1): GCLayer(
          (conv): LEConv(64, 64)
          (norm): BatchNorm(64)
        )
        (2): GCLayer(
          (conv): LEConv(64, 64)
          (norm): BatchNorm(64)
        )
        (3): GCLayer(
          (conv): LEConv(64, 64)
          (norm): BatchNorm(64)
        )
        (4): GCLayer(
          (conv): LEConv(64, 64)
          (norm): BatchNorm(64)
        )
        (5): GCLayer(
          (conv): LEConv(64, 64)
          (norm): BatchNorm(64)
        )
        (6): GCLayer(
          (conv): LEConv(64, 64)
          (norm): BatchNorm(64)
        )
        (7): GCLayer(
          (conv): LEConv(64, 64)
          (norm): BatchNorm(64)
        )
        (8): GCLayer(
          (conv): LEConv(64, 64)
          (norm): BatchNorm(64)
        )
        (9): GCLayer(
          (conv): LEConv(64, 64)
          (norm): BatchNorm(64)
        )
        (10): GCLayer(
          (conv): LEConv(64, 64)
          (norm): BatchNorm(64)
        )
        (11): GCLayer(
          (conv): LEConv(64, 64)
          (norm): BatchNorm(64)
        )
      )
      (pool): GlobalAttentionSelect(gate_nn=Sequential(
        (0): Linear(in_features=64, out_features=32, bias=True)
        (1): ReLU()
        (2): Linear(in_features=32, out_features=32, bias=True)
        (3): ReLU()
        (4): Linear(in_features=32, out_features=32, bias=True)
        (5): ReLU()
        (6): Linear(in_features=32, out_features=1, bias=True)
        (7): ReLU()
      ), nn=None)
    )
  )
  (final_out): Sequential(
    (0): Linear(in_features=64, out_features=64, bias=True)
    (1): ReLU()
    (2): Linear(in_features=64, out_features=64, bias=True)
    (3): ReLU()
    (4): Linear(in_features=64, out_features=64, bias=True)
    (5): ReLU()
    (6): Linear(in_features=64, out_features=1, bias=True)
  )
)

===== Optimizer:
Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.001
    weight_decay: 0
)

 ===== Train model. Execute time was:
Minutes: 2.61
Seconds: 156.80

 ===== Test last_model. Execute time was:
Minutes: 0.01
Seconds: 0.31

 ===== Test best_model. Execute time was:
Minutes: 0.01
Seconds: 0.35

 ===== Test best_model_sa. Execute time was:
Minutes: 0.01
Seconds: 0.31

Saving raw metrics in: ../test/test_output_siamese/test_command_line/22-train_05101439/med_0-0/GBSN05101439_med_0-0_metrics

 ===== best_model:
Epoch: 23
                          val      test
-------------------  --------  --------
main loss            0.488939  0.421386
average              0.749107  0.794271
roc_auc              0         0.210526
f1_score             0.974359  0.974359
c_at_1               0.95      0.95
f_05                 0.959596  0.959596
brier                0.861581  0.876871
soft_f1_loss         0.198122  0.199508
double_soft_f1_loss  0.590718  0.562636
bound_f1_loss        0.221506  0.223116

 ===== best_model_sa:
Epoch: 49
                           val       test
-------------------  ---------  ---------
main loss            6.29741    0.900047
average              0.850992   0.803511
roc_auc              0.421053   0.184211
f1_score             0.974359   0.974359
c_at_1               0.95       0.95
f_05                 0.959596   0.959596
brier                0.949953   0.949387
soft_f1_loss         0.0264515  0.0309868
double_soft_f1_loss  0.513226   0.515493
bound_f1_loss        0.050809   0.0553353

 ===== last_model:
Epoch: 149
                           val       test
-------------------  ---------  ---------
main loss            4.83433    0.392693
average              0.829736   0.846985
roc_auc              0.315789   0.421053
f1_score             0.974359   0.974359
c_at_1               0.95       0.95
f_05                 0.959596   0.959596
brier                0.948934   0.929919
soft_f1_loss         0.0308759  0.066928
double_soft_f1_loss  0.515438   0.53255
bound_f1_loss        0.0552245  0.0911721

 ===== Early stop model:
Epoch: 23
Early stop model deactivated

===== Max average in val: 0.850992 epoch 49

===== Optimize threshold for best_model:
Test: Original
0.7942705318152616
Val: Best th posible
('0.05', '0.00')
0.7621714940594974
Test: Optimized
0.8061573485906024
Test: Best th posible
('0.05', '0.00')
0.8061573485906024

===== Optimize threshold for best_model_sa:
Test: Original
0.8035105163995672
Val: Best th posible
('0.05', '0.00')
0.8509989330028974
Test: Optimized
0.8035991375791924
Test: Best th posible
('0.05', '0.00')
0.8035991375791924

==========
Max gpu_usage: 30814

 ===== Total time for GBSN05101439_med_0-0. Execute time was:
Minutes: 2.93
Seconds: 175.95
